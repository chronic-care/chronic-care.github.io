<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="COVID19EmergencyDeptAssessment"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary"/>
  </meta>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>Related Artifacts</h2><table class="grid"><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1</code></td></tr><tr><td>depends-on</td><td><code>http://fhir.org/guides/acep/Library/COVID19Concepts|1.0.0</code></td></tr><tr><td>depends-on</td><td><code>http://fhir.org/guides/acep/Library/CDSConnectCommons|1.0.3</code></td></tr><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIRHelpers|4.0.1</code></td></tr></table><h2>Parameters</h2><table class="grid"><tr><td>VitalSignsLookbackPeriod</td><td>in</td><td>0</td><td>1</td><td>Quantity</td></tr><tr><td>LabResultsLookbackPeriod</td><td>in</td><td>0</td><td>1</td><td>Quantity</td></tr><tr><td>Symptoms</td><td>in</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>ClinicalAssessments</td><td>in</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>RiskFactors</td><td>in</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>Patient</td><td>out</td><td>0</td><td>1</td><td>Patient</td></tr><tr><td>Patient Age</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Patient Birth Sex</td><td>out</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>Patient Race</td><td>out</td><td>0</td><td>*</td><td>Coding</td></tr><tr><td>Patient Race Text</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Heart Rate Observations</td><td>out</td><td>0</td><td>*</td><td>Observation</td></tr><tr><td>Last Heart Rate</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Heart Rate value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Blood Pressure Observation Components</td><td>out</td><td>0</td><td>*</td><td>Any</td></tr><tr><td>Systolic Blood Pressure Observations</td><td>out</td><td>0</td><td>*</td><td>Any</td></tr><tr><td>Blood Pressure Observations</td><td>out</td><td>0</td><td>*</td><td>Any</td></tr><tr><td>Last SBP</td><td>out</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>Last SBP value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>O2 Saturation Observations</td><td>out</td><td>0</td><td>*</td><td>Observation</td></tr><tr><td>Last O2 Saturation value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last O2 Saturation percent</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Respiratory Rate Observations</td><td>out</td><td>0</td><td>*</td><td>Observation</td></tr><tr><td>Last Respiratory Rate</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Respiratory Rate value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Body Temperature Observations</td><td>out</td><td>0</td><td>*</td><td>Observation</td></tr><tr><td>Last Body Temperature</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Body Temperature value in C</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last Body Temperature value in F</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last Body Weight value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last Body Height value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last BMI</td><td>out</td><td>0</td><td>1</td><td>Quantity</td></tr><tr><td>Last Glasgow Coma Scale score</td><td>out</td><td>0</td><td>1</td><td>Any</td></tr><tr><td>Alertness Assessment Code</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Performance Status Code</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Is Critical Severity</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Last PaO2FiO2 Ratio Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last PaO2FiO2 Ratio Lab Result value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Is Severe Severity</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Is Moderate Severity</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Is Mild Severity</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Severity Classification</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Respiratory Rate Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>O2 Saturation Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Heart Rate Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Systolic BP Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Temperature Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Alertness Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Inspired Oxygen Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Sex Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Age Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Performance Status Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Total Risk Score</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Risk Percent</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>All Active Conditions</td><td>out</td><td>0</td><td>*</td><td>Condition</td></tr><tr><td>Has Cancer Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Cardiovascular Disease Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Chronic Respiratory Disease Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Diabetes Type 2 Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Downs Syndrome Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Hypertension Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Immunosuppression Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Neurologic Disease Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Obstructive Sleep Apnea Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Obesity Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Pregnancy Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Renal Disease Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has Steroid Usage Risk Factor</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Risk Factors count</td><td>out</td><td>0</td><td>1</td><td>integer</td></tr><tr><td>Last ALT Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last AST Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last CRP Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Creatinine Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last D-dimer Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Neutrophils Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Leukocyte Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Ferritin Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Lymphocytes Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Platelets Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last LDH Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last Troponin Lab Result</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code>// # Introduction

// ACEP Emergency Department COVID-19 Management Tool

library COVID19EmergencyDeptAssessment version '1.0.0'

// # Data model #

using FHIR version '4.0.1'

// # Referenced libraries #

// The COVID-19 Concepts library provides terminology concepts used to identify data elements throughout the artifact.
include COVID19Concepts version '1.0.0' called CC
// The CDS Connect Commons for FHIRv400 library provides functions representing commonly used CDS logic and patterns.
include CDSConnectCommons version '1.0.3' called C3F
// The FHIRHelpers library provides common functions for simplifying interaction w/ the FHIR R4 data model.
include FHIRHelpers version '4.0.1'

// # Parameters #

// 12 months for test data, use '24 hours' as default in production?
// Or, get current, active (?) Patient Encounter(s) and find Observations associated with those Encounters
parameter VitalSignsLookbackPeriod default 12 months

// 12 months for test data, use '2 days' as default in production?
parameter LabResultsLookbackPeriod default 12 months

// Symptoms as observed by a clinical user, overrides Observation queries, if any.
parameter Symptoms Tuple {
  Fever Boolean,
  Cough Boolean,
  SoreThroat Boolean,
  Malaise Boolean,
  Headache Boolean,
  MusclePain Boolean,
  Nausea Boolean,
  LossOfTasteAndSmell Boolean,
  ShortnessOfBreath Boolean
}

parameter ClinicalAssessments Tuple {
  RespiratoryRate Decimal,
  O2Saturation Decimal,
  HeartRate Decimal,
  SystolicBloodPressure Decimal,
  TemperatureF Decimal,
  Alertness String,               // Code from value set "Alertness Scale Codes"
  SupplementalOxygen Boolean,
  PerformanceStatus String,       // Code from value set "WHO Performance Status Codes"
  Dyspnea Boolean,
  AbnormalChestImaging Boolean,
  PaO2FiO2Ratio Decimal,          // e.g. 300
  LungInfiltrates Decimal,        // Percent
  RespiratoryFailure Boolean,
  SepticShock Boolean,
  MultiorganDysfunction Boolean
}

// Risk Factors as specified by a clinical user, overrides Condition queries, if any.
parameter RiskFactors Tuple {
  Cancer Boolean,
  CardiovascularDisease Boolean,
  ChronicRespiratoryDisease Boolean,
  DiabetesType2 Boolean,
  DownsSyndrome Boolean,
  Hypertension Boolean,
  Immunosuppression Boolean,
  NeurologicDisease Boolean,
  Obesity Boolean,
  ObstructiveSleepApnea Boolean,
  Pregnancy Boolean,
  RenalDisease Boolean,
  SteroidUsage Boolean
}

// # CDS logic #

context Patient

/*
 * Demographics
 */

define "Patient Age":
 AgeInYears()

define "Patient Birth Sex":
  First(Patient.extension e
      where e.url = 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-birthsex'
  ).value

define "Patient Race":
  (flatten (
    Patient.extension Extension
      where Extension.url = 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race'
        return Extension.extension
  )) E
    where E.url = 'ombCategory'
      or E.url = 'detailed'
    return E.value as Coding

define "Patient Race Text":
  First((flatten (
    Patient.extension Extension
      where Extension.url = 'http://hl7.org/fhir/us/core/StructureDefinition/us-core-race'
        return Extension.extension
  )) E
    where E.url = 'text'
    return E.value as FHIR.string)

/*
 * Assess Vital Signs
 */

define "Last Heart Rate":
  C3F.MostRecent("Heart Rate Observations")

define "Last Heart Rate value":
  Coalesce(ClinicalAssessments.HeartRate,
    C3F.QuantityValue("Last Heart Rate").value)

define "Heart Rate Observations":
  C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Heart rate"]),
    VitalSignsLookbackPeriod)

define "Last SBP":
  Last("Blood Pressure Observations" o where o.Systolic is not null)

define "Last SBP value":
  Coalesce(ClinicalAssessments.SystolicBloodPressure,
    "Last SBP".Systolic)

define "Blood Pressure Observations":
 ("Blood Pressure Observation Components"
    union "Systolic Blood Pressure Observations")

// Use when Systolic BP is reported as an independent Observation (not recommended)
define "Systolic Blood Pressure Observations":
  (C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Systolic blood pressure"]),
    VitalSignsLookbackPeriod)) bp
      let SystolicValue: Round((bp.value as FHIR.Quantity).value),
          DiastolicValue: Round((MatchingDiastolic(bp).value as FHIR.Quantity).value)
    return {
      //"Date": ObservationDate(bp),
      "Date": ToString(C3F.FindDate(bp)),
      "Systolic": SystolicValue,
      "Diastolic": DiastolicValue,
      "Display": Coalesce(ToString(SystolicValue), '-') + '/' + Coalesce(ToString(DiastolicValue), '-')
    }
    sort by Date asc

define function MatchingDiastolic(SystolicBP FHIR.Observation):
  First(
  (C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Diastolic blood pressure"]),
    VitalSignsLookbackPeriod)) bp
      where (bp.effective as FHIR.dateTime) = (SystolicBP.effective as FHIR.dateTime)
  )

// TODO move into Commons library
define function ComponentValue(Obs FHIR.Observation, code System.Code):
  First(Obs.component c
    where c.code ~ ToConcept(code)).value as FHIR.Quantity

// Use the following if Systolic and Diastolic are combined as components within one Observation.
define "Blood Pressure Observation Components":
  (C3F.ObservationLookBack(C3F.Verified([Observation: CC."Blood pressure"]), VitalSignsLookbackPeriod)) bp
    let SystolicValue: Round(ComponentValue(bp, CC."Systolic blood pressure").value),
        DiastolicValue: Round(ComponentValue(bp, CC."Diastolic blood pressure").value)
   return {
     "Date": ToString(C3F.FindDate(bp)),
     "Systolic": SystolicValue,
     "Diastolic": DiastolicValue,
     "Display": Coalesce(ToString(SystolicValue), '-') + '/' + Coalesce(ToString(DiastolicValue), '-')
   }
   sort by Date asc

define "Last O2 Saturation value":
  Coalesce(ClinicalAssessments.O2Saturation,
    C3F.QuantityValue(C3F.MostRecent("O2 Saturation Observations")).value)

define "Last O2 Saturation percent":
  // O2 Saturation should be reported as a percent, e.g. 92.
  if "Last O2 Saturation value" &gt;= 1 then "Last O2 Saturation value"
  // If reported as decimal .92, then multiply by 100.
  else if "Last O2 Saturation value" is not null then Round(100.0 * "Last O2 Saturation value")
  else null

define "O2 Saturation Observations":
  C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Oxygen saturation"]),
    VitalSignsLookbackPeriod)

define "Last Respiratory Rate":
  C3F.MostRecent("Respiratory Rate Observations")

define "Last Respiratory Rate value":
  Coalesce(ClinicalAssessments.RespiratoryRate,
    C3F.QuantityValue("Last Respiratory Rate").value)

define "Respiratory Rate Observations":
  C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Respiratory rate"]),
    VitalSignsLookbackPeriod)

define "Last Body Temperature":
  C3F.MostRecent("Body Temperature Observations")

define "Last Body Temperature value in C":
  if ClinicalAssessments.TemperatureF is null then
    TemperatureInC("Last Body Temperature".value).value
  else
    TemperatureInC( System.Quantity {value: ClinicalAssessments.TemperatureF, unit: '[degF]'} ).value

define "Last Body Temperature value in F":
  Coalesce(ClinicalAssessments.TemperatureF,
    TemperatureInF("Last Body Temperature".value).value)

define "Body Temperature Observations":
  C3F.ObservationLookBack(
    C3F.Verified([Observation: CC."Body temperature"]),
    VitalSignsLookbackPeriod)

define "Last Body Weight value":
  ToMetric(C3F.QuantityValue(C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Body weight"]),
      VitalSignsLookbackPeriod)
  ))).value

define "Last Body Height value":
  ToMetric(C3F.QuantityValue(C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Body height"]),
      VitalSignsLookbackPeriod)
  ))).value

define "Last BMI":
  case
    when "Last Body Weight value" is null then null
    when "Last Body Height value" is null then null
    else System.Quantity { value: Round("Last Body Weight value" / ("Last Body Height value" / 100) ^ 2), unit: 'kg/m2' }
  end

define function ToQuantity(quantity FHIR.Quantity):
	System.Quantity {
    	value: quantity.value.value,
      	unit: quantity.code.value  // use UCUM 'code' instead of Quantity 'unit'
    }

define function TemperatureInC(qty System.Quantity):
  case
    when qty.unit = 'Cel' then qty
  	when qty.unit = '[degF]' then
  		System.Quantity { value: Round((qty.value - 32) * (5 / 9), 1), unit: 'Cel' }
  	else null
  end

define function TemperatureInF(qty System.Quantity):
  case
    when qty.unit = '[degF]' then qty
    when qty.unit = 'Cel' then
      System.Quantity { value: Round((qty.value * (9/5)) + 32, 1), unit: '[degF]' }
    else null
  end

define function ToMetric(qty System.Quantity):
  case
  when qty is null then null
  when qty.value is null then null
  when qty.unit = '[lb_av]' then
    System.Quantity { value: qty.value * 0.454, unit: 'kg' }
  when qty.unit = 'g' then
    System.Quantity { value: qty.value / 1000, unit: 'kg' }
  when qty.unit = '[in_i]' then
    System.Quantity { value: qty.value * 2.54, unit: 'cm' }
  when qty.unit = '[degF]' then
    System.Quantity { value: (qty.value - 32) * (5 / 9), unit: 'Cel' }
  else
    qty
  end

/*
 * Clinical Assessments
 */

// TODO: Enchancement - [Observation: "Glasgow Coma Scale"] score total &gt; 15 = Confused
define "Last Glasgow Coma Scale score":
  null

// Code from value set "Alertness Scale Codes"
define "Alertness Assessment Code":
  ClinicalAssessments.Alertness

// Code from "WHO Performance Status Codes"
define "Performance Status Code":
  ClinicalAssessments.PerformanceStatus

/*
* Determine Severity Classification
*/

define "Severity Classification":
  if "Is Critical Severity" then 'CRITICAL'
  else if "Is Severe Severity" then 'SEVERE'
  else if "Is Moderate Severity" then 'MODERATE'
  else if "Is Mild Severity" then 'MILD'
  else null

define "Is Critical Severity":
  if ClinicalAssessments.RespiratoryFailure
    or ClinicalAssessments.SepticShock
    or ClinicalAssessments.MultiorganDysfunction
    then true
  else false

define "Is Severe Severity":
  if not "Is Critical Severity"
    and ("Last O2 Saturation percent" &lt; 94
      or "Last Respiratory Rate value" &gt; 30
      or "Last PaO2FiO2 Ratio Lab Result value" &lt; 300
      or ClinicalAssessments.LungInfiltrates &gt; 50)
    then true
  else false

// TODO evidence of lower respiratory disease
// TODO on room air (not Supplemental Oxygen)
define "Is Moderate Severity":
  if not "Is Severe Severity" and not "Is Critical Severity"
    and ("Last O2 Saturation percent" &gt;= 94
        or Symptoms.ShortnessOfBreath
        or ClinicalAssessments.Dyspnea
        or ClinicalAssessments.AbnormalChestImaging
    )
    then true
  else false

// TODO moved 3 parameters to Moderat as "evidence of lower respiratory disease"
define "Is Mild Severity":
  if not "Is Severe Severity" and not "Is Critical Severity" and not "Is Moderate Severity"
    and (Symptoms.Fever or Symptoms.Cough or Symptoms.SoreThroat or Symptoms.Malaise
          or Symptoms.Headache or Symptoms.MusclePain or Symptoms.Nausea or Symptoms.LossOfTasteAndSmell)
    then true
  else false

/*
* Risk Prognostication
*/

// TODO Alertness, InspiredOxygen, PerformanceStatus

define "Total Risk Score":
  "Respiratory Rate Risk Score" + "O2 Saturation Risk Score" + "Heart Rate Risk Score" + "Systolic BP Risk Score"
    + "Temperature Risk Score" + "Alertness Score" + "Inspired Oxygen Score" + "Sex Risk Score"
    + "Age Risk Score" + "Performance Status Score"

define "Risk Percent":
  case "Total Risk Score"
    when null then null
    when 0 then 1
    when 1 then 1
    when 2 then 2
    when 3 then 2
    when 4 then 3
    when 5 then 9
    when 6 then 15
    when 7 then 18
    when 8 then 22
    when 9 then 26
    when 10 then 29
    when 11 then 34
    when 12 then 38
    when 13 then 46
    when 14 then 48
    when 15 then 50
    when 16 then 55
    else 66
  end

define "Respiratory Rate Risk Score":
  case
    when "Last Respiratory Rate value" between 12 and 20 then 0
    when "Last Respiratory Rate value" between 9 and 11 then 1
    when "Last Respiratory Rate value" between 21 and 24 then 2
    when "Last Respiratory Rate value" &lt; 9 then 3
    when "Last Respiratory Rate value" &gt; 24 then 3
    else 0
  end

define "O2 Saturation Risk Score":
  case
    when "Last O2 Saturation percent" &gt; 95 then 0
    when "Last O2 Saturation percent" between 94 and 95 then 1
    when "Last O2 Saturation percent" between 92 and 93 then 2
    when "Last O2 Saturation percent" &lt; 92 then 3
    else 0
  end

define "Heart Rate Risk Score":
  case
    when "Last Heart Rate value" between 51 and 90 then 0
    when "Last Heart Rate value" between 41 and 50 then 1
    when "Last Heart Rate value" between 91 and 110 then 1
    when "Last Heart Rate value" between 111 and 130 then 2
    when "Last Heart Rate value" &lt; 41 then 3
    when "Last Heart Rate value" &gt; 130 then 3
    else 0
  end

define "Systolic BP Risk Score":
  case
    when "Last SBP value" between 111 and 219 then 0
    when "Last SBP value" between 101 and 110 then 1
    when "Last SBP value" between 91 and 100 then 2
    when "Last SBP value" &lt; 91 then 3
    when "Last SBP value" &gt; 219 then 3
    else 0
  end

define "Temperature Risk Score":
  case
    when "Last Body Temperature value in C" between 36.1 and 38.0 then 0
    when "Last Body Temperature value in C" between 35.1 and 36.0 then 1
    when "Last Body Temperature value in C" between 38.1 and 39.0 then 1
    when "Last Body Temperature value in C" &gt; 39.0 then 2
    when "Last Body Temperature value in C" &lt; 35.1 then 3
    else 0
  end

define "Sex Risk Score":
  case
    when "Patient Birth Sex" = 'M' then 1
    when "Patient Birth Sex" = 'F' then 0
    // if birth sex is UNK or not available, then use Administrative Gender
    when Patient.gender = 'male' then 1
    when Patient.gender = 'female' then 0
    else 0
  end

define "Age Risk Score":
  case
    when AgeInYears() between 16 and 49 then 0
    when AgeInYears() between 50 and 65 then 2
    when AgeInYears() between 66 and 80 then 3
    when AgeInYears() &gt; 80 then 4
    else 0
  end

define "Alertness Score":
  case "Alertness Assessment Code"
    when CC."Confused".code then 3
    else 0
  end

define "Performance Status Score":
  case "Performance Status Code"
    when CC."Performance Status 0".code then 0
    when CC."Performance Status 1".code then 1
    when CC."Performance Status 2".code then 2
    when CC."Performance Status 3".code then 3
    when CC."Performance Status 4".code then 4
    else 0
  end

define "Inspired Oxygen Score":
  if ClinicalAssessments.SupplementalOxygen then 2
  else 0

/*
 * Assess Risk Factors
 */

define "Risk Factors count":
  (if "Has Cancer Risk Factor" then 1 else 0)
    + (if "Has Cardiovascular Disease Risk Factor" then 1 else 0)
    + (if "Has Chronic Respiratory Disease Risk Factor" then 1 else 0)
    + (if "Has Diabetes Type 2 Risk Factor" then 1 else 0)
    + (if "Has Downs Syndrome Risk Factor" then 1 else 0)
    + (if "Has Hypertension Risk Factor" then 1 else 0)
    + (if "Has Immunosuppression Risk Factor" then 1 else 0)
    + (if "Has Neurologic Disease Risk Factor" then 1 else 0)
    + (if "Has Obstructive Sleep Apnea Risk Factor" then 1 else 0)
    + (if "Has Obesity Risk Factor" then 1 else 0)
    + (if "Has Pregnancy Risk Factor" then 1 else 0)
    + (if "Has Renal Disease Risk Factor" then 1 else 0)
    + (if "Has Steroid Usage Risk Factor" then 1 else 0)

define "All Active Conditions":
  C3F.Confirmed(C3F.ActiveOrRecurring([Condition]))

define "Has Cancer Risk Factor":
  Coalesce(
    RiskFactors.Cancer,
    exists("All Active Conditions" C
      where C.code in CC."Malignancy Codes")
  )

define "Has Cardiovascular Disease Risk Factor":
  Coalesce(
    RiskFactors.CardiovascularDisease,
    exists("All Active Conditions" C
      where C.code in CC."Cardiovascular Disease Codes")
  )

define "Has Chronic Respiratory Disease Risk Factor":
  Coalesce(
    RiskFactors.ChronicRespiratoryDisease,
    exists("All Active Conditions" C
      where C.code in CC."Chronic Respiratory Disease Codes")
  )

define "Has Diabetes Type 2 Risk Factor":
  Coalesce(
    RiskFactors.DiabetesType2,
    exists("All Active Conditions" C
      where C.code in CC."Diabetes Type 2 Codes")
  )

define "Has Downs Syndrome Risk Factor":
  Coalesce(
    RiskFactors.DownsSyndrome,
    exists("All Active Conditions" C
      where C.code in CC."Downs Syndrome Codes")
  )

define "Has Hypertension Risk Factor":
  Coalesce(
    RiskFactors.Hypertension,
    exists("All Active Conditions" C
      where C.code in CC."Hypertension Codes")
  )

define "Has Immunosuppression Risk Factor":
  RiskFactors.Immunosuppression

define "Has Neurologic Disease Risk Factor":
  RiskFactors.NeurologicDisease

define "Has Obstructive Sleep Apnea Risk Factor":
  Coalesce(
    RiskFactors.ObstructiveSleepApnea,
    exists("All Active Conditions" C
      where C.code in CC."Obstructive Sleep Apnea Codes")
  )

define "Has Obesity Risk Factor":
  Coalesce(
    RiskFactors.Obesity,
    (exists("All Active Conditions" C
      where (C.code in CC."Obesity SNOMED Codes"
        or C.code in CC."Obesity ICD10CM Codes"))
     or "Last BMI".value &gt;= 35)
  )

define "Has Pregnancy Risk Factor":
  RiskFactors.Pregnancy

define "Has Renal Disease Risk Factor":
  Coalesce(
    RiskFactors.RenalDisease,
    exists("All Active Conditions" C
      where C.code in CC."Renal Disease Codes")
  )

define "Has Steroid Usage Risk Factor":
  RiskFactors.SteroidUsage

/*
 * Diagnostic Testing
 */

define "Last ALT Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."ALT Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last AST Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."AST Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last CRP Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."CRP Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Creatinine Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Creatinine Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last D-dimer Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."D-dimer Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Neutrophils Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Neutrophils Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Leukocyte Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Leukocyte Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Ferritin Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Ferritin Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Lymphocytes Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Lymphocytes Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last PaO2FiO2 Ratio Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."PaO2FiO2 Ratio Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last PaO2FiO2 Ratio Lab Result value":
  Coalesce(ClinicalAssessments.PaO2FiO2Ratio,
    ("Last PaO2FiO2 Ratio Lab Result".value as FHIR.Quantity).value
  )

define "Last Platelets Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Platelets Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last LDH Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."LDH Lab Results"]),
      LabResultsLookbackPeriod)
  )

define "Last Troponin Lab Result":
  C3F.MostRecent(
    C3F.ObservationLookBack(
      C3F.Verified([Observation: CC."Troponin Lab Results"]),
      LabResultsLookbackPeriod)
  )
</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 157Kb)</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 293Kb)</p></div>
  </text>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="shareable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="publishable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="executable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel">
    <valueCode value="structured"/>
  </extension>
  <url value="http://fhir.org/guides/acep/Library/COVID19EmergencyDeptAssessment"/>
  <version value="0.1.0"/>
  <name value="COVID19EmergencyDeptAssessment"/>
  <title value="CQL Library - ACEP Emergency Department COVID-19 Management Tool Logic"/>
  <status value="active"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2021-03-15T03:04:19+00:00"/>
  <publisher value="Veterans Health Administration (VHA)"/>
  <contact>
    <telecom>
      <system value="url"/>
      <value value="http://hl7.org/Special/committees/[something]"/>
    </telecom>
  </contact>
  <description value="This library contains logic to support the ACEP Emergency Department COVID-19 Management Tool guideline, including caclculation of the risk score and severity."/>
  <useContext>
    <code>
      <system value="http://terminology.hl7.org/CodeSystem/usage-context-type"/>
      <code value="focus"/>
      <display value="Clinical Focus"/>
    </code>
    <valueCodeableConcept>
      <coding>
        <system value="http://snomed.info/sct"/>
        <code value="840539006"/>
        <display value="Disease caused by Severe acute respiratory syndrome coronavirus 2 (disorder)"/>
      </coding>
    </valueCodeableConcept>
  </useContext>
  <jurisdiction>
    <coding>
      <system value="http://unstats.un.org/unsd/methods/m49/m49.htm"/>
      <code value="001"/>
    </coding>
  </jurisdiction>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://fhir.org/guides/acep/Library/COVID19Concepts|1.0.0"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://fhir.org/guides/acep/Library/CDSConnectCommons|1.0.3"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"/>
  </relatedArtifact>
  <parameter>
    <name value="VitalSignsLookbackPeriod"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Quantity"/>
  </parameter>
  <parameter>
    <name value="LabResultsLookbackPeriod"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Quantity"/>
  </parameter>
  <parameter>
    <name value="Symptoms"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="ClinicalAssessments"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="RiskFactors"/>
    <use value="in"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Patient Age"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Patient Birth Sex"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Patient Race"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Coding"/>
  </parameter>
  <parameter>
    <name value="Patient Race Text"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Heart Rate Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Heart Rate"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Heart Rate value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Blood Pressure Observation Components"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Systolic Blood Pressure Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Blood Pressure Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Last SBP"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Last SBP value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="O2 Saturation Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last O2 Saturation value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last O2 Saturation percent"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Respiratory Rate Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Respiratory Rate"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Respiratory Rate value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Body Temperature Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Body Temperature"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Body Temperature value in C"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last Body Temperature value in F"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last Body Weight value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last Body Height value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last BMI"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Quantity"/>
  </parameter>
  <parameter>
    <name value="Last Glasgow Coma Scale score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Any"/>
  </parameter>
  <parameter>
    <name value="Alertness Assessment Code"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Performance Status Code"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Is Critical Severity"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Last PaO2FiO2 Ratio Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last PaO2FiO2 Ratio Lab Result value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Is Severe Severity"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Is Moderate Severity"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Is Mild Severity"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Severity Classification"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Respiratory Rate Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="O2 Saturation Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Heart Rate Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Systolic BP Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Temperature Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Alertness Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Inspired Oxygen Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Sex Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Age Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Performance Status Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Total Risk Score"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Risk Percent"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="All Active Conditions"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Condition"/>
  </parameter>
  <parameter>
    <name value="Has Cancer Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Cardiovascular Disease Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Chronic Respiratory Disease Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Diabetes Type 2 Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Downs Syndrome Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Hypertension Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Immunosuppression Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Neurologic Disease Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Obstructive Sleep Apnea Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Obesity Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Pregnancy Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Renal Disease Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has Steroid Usage Risk Factor"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Risk Factors count"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="integer"/>
  </parameter>
  <parameter>
    <name value="Last ALT Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last AST Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last CRP Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Creatinine Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last D-dimer Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Neutrophils Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Leukocyte Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Ferritin Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Lymphocytes Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Platelets Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last LDH Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last Troponin Lab Result"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="Ly8gIyBJbnRyb2R1Y3Rpb24KCi8vIEFDRVAgRW1lcmdlbmN5IERlcGFydG1lbnQgQ09WSUQtMTkgTWFuYWdlbWVudCBUb29sCgpsaWJyYXJ5IENPVklEMTlFbWVyZ2VuY3lEZXB0QXNzZXNzbWVudCB2ZXJzaW9uICcxLjAuMCcKCi8vICMgRGF0YSBtb2RlbCAjCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwoKLy8gIyBSZWZlcmVuY2VkIGxpYnJhcmllcyAjCgovLyBUaGUgQ09WSUQtMTkgQ29uY2VwdHMgbGlicmFyeSBwcm92aWRlcyB0ZXJtaW5vbG9neSBjb25jZXB0cyB1c2VkIHRvIGlkZW50aWZ5IGRhdGEgZWxlbWVudHMgdGhyb3VnaG91dCB0aGUgYXJ0aWZhY3QuCmluY2x1ZGUgQ09WSUQxOUNvbmNlcHRzIHZlcnNpb24gJzEuMC4wJyBjYWxsZWQgQ0MKLy8gVGhlIENEUyBDb25uZWN0IENvbW1vbnMgZm9yIEZISVJ2NDAwIGxpYnJhcnkgcHJvdmlkZXMgZnVuY3Rpb25zIHJlcHJlc2VudGluZyBjb21tb25seSB1c2VkIENEUyBsb2dpYyBhbmQgcGF0dGVybnMuCmluY2x1ZGUgQ0RTQ29ubmVjdENvbW1vbnMgdmVyc2lvbiAnMS4wLjMnIGNhbGxlZCBDM0YKLy8gVGhlIEZISVJIZWxwZXJzIGxpYnJhcnkgcHJvdmlkZXMgY29tbW9uIGZ1bmN0aW9ucyBmb3Igc2ltcGxpZnlpbmcgaW50ZXJhY3Rpb24gdy8gdGhlIEZISVIgUjQgZGF0YSBtb2RlbC4KaW5jbHVkZSBGSElSSGVscGVycyB2ZXJzaW9uICc0LjAuMScKCi8vICMgUGFyYW1ldGVycyAjCgovLyAxMiBtb250aHMgZm9yIHRlc3QgZGF0YSwgdXNlICcyNCBob3VycycgYXMgZGVmYXVsdCBpbiBwcm9kdWN0aW9uPwovLyBPciwgZ2V0IGN1cnJlbnQsIGFjdGl2ZSAoPykgUGF0aWVudCBFbmNvdW50ZXIocykgYW5kIGZpbmQgT2JzZXJ2YXRpb25zIGFzc29jaWF0ZWQgd2l0aCB0aG9zZSBFbmNvdW50ZXJzCnBhcmFtZXRlciBWaXRhbFNpZ25zTG9va2JhY2tQZXJpb2QgZGVmYXVsdCAxMiBtb250aHMKCi8vIDEyIG1vbnRocyBmb3IgdGVzdCBkYXRhLCB1c2UgJzIgZGF5cycgYXMgZGVmYXVsdCBpbiBwcm9kdWN0aW9uPwpwYXJhbWV0ZXIgTGFiUmVzdWx0c0xvb2tiYWNrUGVyaW9kIGRlZmF1bHQgMTIgbW9udGhzCgovLyBTeW1wdG9tcyBhcyBvYnNlcnZlZCBieSBhIGNsaW5pY2FsIHVzZXIsIG92ZXJyaWRlcyBPYnNlcnZhdGlvbiBxdWVyaWVzLCBpZiBhbnkuCnBhcmFtZXRlciBTeW1wdG9tcyBUdXBsZSB7CiAgRmV2ZXIgQm9vbGVhbiwKICBDb3VnaCBCb29sZWFuLAogIFNvcmVUaHJvYXQgQm9vbGVhbiwKICBNYWxhaXNlIEJvb2xlYW4sCiAgSGVhZGFjaGUgQm9vbGVhbiwKICBNdXNjbGVQYWluIEJvb2xlYW4sCiAgTmF1c2VhIEJvb2xlYW4sCiAgTG9zc09mVGFzdGVBbmRTbWVsbCBCb29sZWFuLAogIFNob3J0bmVzc09mQnJlYXRoIEJvb2xlYW4KfQoKcGFyYW1ldGVyIENsaW5pY2FsQXNzZXNzbWVudHMgVHVwbGUgewogIFJlc3BpcmF0b3J5UmF0ZSBEZWNpbWFsLAogIE8yU2F0dXJhdGlvbiBEZWNpbWFsLAogIEhlYXJ0UmF0ZSBEZWNpbWFsLAogIFN5c3RvbGljQmxvb2RQcmVzc3VyZSBEZWNpbWFsLAogIFRlbXBlcmF0dXJlRiBEZWNpbWFsLAogIEFsZXJ0bmVzcyBTdHJpbmcsICAgICAgICAgICAgICAgLy8gQ29kZSBmcm9tIHZhbHVlIHNldCAiQWxlcnRuZXNzIFNjYWxlIENvZGVzIgogIFN1cHBsZW1lbnRhbE94eWdlbiBCb29sZWFuLAogIFBlcmZvcm1hbmNlU3RhdHVzIFN0cmluZywgICAgICAgLy8gQ29kZSBmcm9tIHZhbHVlIHNldCAiV0hPIFBlcmZvcm1hbmNlIFN0YXR1cyBDb2RlcyIKICBEeXNwbmVhIEJvb2xlYW4sCiAgQWJub3JtYWxDaGVzdEltYWdpbmcgQm9vbGVhbiwKICBQYU8yRmlPMlJhdGlvIERlY2ltYWwsICAgICAgICAgIC8vIGUuZy4gMzAwCiAgTHVuZ0luZmlsdHJhdGVzIERlY2ltYWwsICAgICAgICAvLyBQZXJjZW50CiAgUmVzcGlyYXRvcnlGYWlsdXJlIEJvb2xlYW4sCiAgU2VwdGljU2hvY2sgQm9vbGVhbiwKICBNdWx0aW9yZ2FuRHlzZnVuY3Rpb24gQm9vbGVhbgp9CgovLyBSaXNrIEZhY3RvcnMgYXMgc3BlY2lmaWVkIGJ5IGEgY2xpbmljYWwgdXNlciwgb3ZlcnJpZGVzIENvbmRpdGlvbiBxdWVyaWVzLCBpZiBhbnkuCnBhcmFtZXRlciBSaXNrRmFjdG9ycyBUdXBsZSB7CiAgQ2FuY2VyIEJvb2xlYW4sCiAgQ2FyZGlvdmFzY3VsYXJEaXNlYXNlIEJvb2xlYW4sCiAgQ2hyb25pY1Jlc3BpcmF0b3J5RGlzZWFzZSBCb29sZWFuLAogIERpYWJldGVzVHlwZTIgQm9vbGVhbiwKICBEb3duc1N5bmRyb21lIEJvb2xlYW4sCiAgSHlwZXJ0ZW5zaW9uIEJvb2xlYW4sCiAgSW1tdW5vc3VwcHJlc3Npb24gQm9vbGVhbiwKICBOZXVyb2xvZ2ljRGlzZWFzZSBCb29sZWFuLAogIE9iZXNpdHkgQm9vbGVhbiwKICBPYnN0cnVjdGl2ZVNsZWVwQXBuZWEgQm9vbGVhbiwKICBQcmVnbmFuY3kgQm9vbGVhbiwKICBSZW5hbERpc2Vhc2UgQm9vbGVhbiwKICBTdGVyb2lkVXNhZ2UgQm9vbGVhbgp9CgovLyAjIENEUyBsb2dpYyAjCgpjb250ZXh0IFBhdGllbnQKCi8qCiAqIERlbW9ncmFwaGljcwogKi8KCmRlZmluZSAiUGF0aWVudCBBZ2UiOgogQWdlSW5ZZWFycygpCgpkZWZpbmUgIlBhdGllbnQgQmlydGggU2V4IjoKICBGaXJzdChQYXRpZW50LmV4dGVuc2lvbiBlCiAgICAgIHdoZXJlIGUudXJsID0gJ2h0dHA6Ly9obDcub3JnL2ZoaXIvdXMvY29yZS9TdHJ1Y3R1cmVEZWZpbml0aW9uL3VzLWNvcmUtYmlydGhzZXgnCiAgKS52YWx1ZQoKZGVmaW5lICJQYXRpZW50IFJhY2UiOgogIChmbGF0dGVuICgKICAgIFBhdGllbnQuZXh0ZW5zaW9uIEV4dGVuc2lvbgogICAgICB3aGVyZSBFeHRlbnNpb24udXJsID0gJ2h0dHA6Ly9obDcub3JnL2ZoaXIvdXMvY29yZS9TdHJ1Y3R1cmVEZWZpbml0aW9uL3VzLWNvcmUtcmFjZScKICAgICAgICByZXR1cm4gRXh0ZW5zaW9uLmV4dGVuc2lvbgogICkpIEUKICAgIHdoZXJlIEUudXJsID0gJ29tYkNhdGVnb3J5JwogICAgICBvciBFLnVybCA9ICdkZXRhaWxlZCcKICAgIHJldHVybiBFLnZhbHVlIGFzIENvZGluZwoKZGVmaW5lICJQYXRpZW50IFJhY2UgVGV4dCI6CiAgRmlyc3QoKGZsYXR0ZW4gKAogICAgUGF0aWVudC5leHRlbnNpb24gRXh0ZW5zaW9uCiAgICAgIHdoZXJlIEV4dGVuc2lvbi51cmwgPSAnaHR0cDovL2hsNy5vcmcvZmhpci91cy9jb3JlL1N0cnVjdHVyZURlZmluaXRpb24vdXMtY29yZS1yYWNlJwogICAgICAgIHJldHVybiBFeHRlbnNpb24uZXh0ZW5zaW9uCiAgKSkgRQogICAgd2hlcmUgRS51cmwgPSAndGV4dCcKICAgIHJldHVybiBFLnZhbHVlIGFzIEZISVIuc3RyaW5nKQoKLyoKICogQXNzZXNzIFZpdGFsIFNpZ25zCiAqLwoKZGVmaW5lICJMYXN0IEhlYXJ0IFJhdGUiOgogIEMzRi5Nb3N0UmVjZW50KCJIZWFydCBSYXRlIE9ic2VydmF0aW9ucyIpCgpkZWZpbmUgIkxhc3QgSGVhcnQgUmF0ZSB2YWx1ZSI6CiAgQ29hbGVzY2UoQ2xpbmljYWxBc3Nlc3NtZW50cy5IZWFydFJhdGUsCiAgICBDM0YuUXVhbnRpdHlWYWx1ZSgiTGFzdCBIZWFydCBSYXRlIikudmFsdWUpCgpkZWZpbmUgIkhlYXJ0IFJhdGUgT2JzZXJ2YXRpb25zIjoKICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJIZWFydCByYXRlIl0pLAogICAgVml0YWxTaWduc0xvb2tiYWNrUGVyaW9kKQoKZGVmaW5lICJMYXN0IFNCUCI6CiAgTGFzdCgiQmxvb2QgUHJlc3N1cmUgT2JzZXJ2YXRpb25zIiBvIHdoZXJlIG8uU3lzdG9saWMgaXMgbm90IG51bGwpCgpkZWZpbmUgIkxhc3QgU0JQIHZhbHVlIjoKICBDb2FsZXNjZShDbGluaWNhbEFzc2Vzc21lbnRzLlN5c3RvbGljQmxvb2RQcmVzc3VyZSwKICAgICJMYXN0IFNCUCIuU3lzdG9saWMpCgpkZWZpbmUgIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9ucyI6CiAoIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9uIENvbXBvbmVudHMiCiAgICB1bmlvbiAiU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUgT2JzZXJ2YXRpb25zIikKCi8vIFVzZSB3aGVuIFN5c3RvbGljIEJQIGlzIHJlcG9ydGVkIGFzIGFuIGluZGVwZW5kZW50IE9ic2VydmF0aW9uIChub3QgcmVjb21tZW5kZWQpCmRlZmluZSAiU3lzdG9saWMgQmxvb2QgUHJlc3N1cmUgT2JzZXJ2YXRpb25zIjoKICAoQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iU3lzdG9saWMgYmxvb2QgcHJlc3N1cmUiXSksCiAgICBWaXRhbFNpZ25zTG9va2JhY2tQZXJpb2QpKSBicAogICAgICBsZXQgU3lzdG9saWNWYWx1ZTogUm91bmQoKGJwLnZhbHVlIGFzIEZISVIuUXVhbnRpdHkpLnZhbHVlKSwKICAgICAgICAgIERpYXN0b2xpY1ZhbHVlOiBSb3VuZCgoTWF0Y2hpbmdEaWFzdG9saWMoYnApLnZhbHVlIGFzIEZISVIuUXVhbnRpdHkpLnZhbHVlKQogICAgcmV0dXJuIHsKICAgICAgLy8iRGF0ZSI6IE9ic2VydmF0aW9uRGF0ZShicCksCiAgICAgICJEYXRlIjogVG9TdHJpbmcoQzNGLkZpbmREYXRlKGJwKSksCiAgICAgICJTeXN0b2xpYyI6IFN5c3RvbGljVmFsdWUsCiAgICAgICJEaWFzdG9saWMiOiBEaWFzdG9saWNWYWx1ZSwKICAgICAgIkRpc3BsYXkiOiBDb2FsZXNjZShUb1N0cmluZyhTeXN0b2xpY1ZhbHVlKSwgJy0nKSArICcvJyArIENvYWxlc2NlKFRvU3RyaW5nKERpYXN0b2xpY1ZhbHVlKSwgJy0nKQogICAgfQogICAgc29ydCBieSBEYXRlIGFzYwoKZGVmaW5lIGZ1bmN0aW9uIE1hdGNoaW5nRGlhc3RvbGljKFN5c3RvbGljQlAgRkhJUi5PYnNlcnZhdGlvbik6CiAgRmlyc3QoCiAgKEMzRi5PYnNlcnZhdGlvbkxvb2tCYWNrKAogICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIkRpYXN0b2xpYyBibG9vZCBwcmVzc3VyZSJdKSwKICAgIFZpdGFsU2lnbnNMb29rYmFja1BlcmlvZCkpIGJwCiAgICAgIHdoZXJlIChicC5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkgPSAoU3lzdG9saWNCUC5lZmZlY3RpdmUgYXMgRkhJUi5kYXRlVGltZSkKICApCgovLyBUT0RPIG1vdmUgaW50byBDb21tb25zIGxpYnJhcnkKZGVmaW5lIGZ1bmN0aW9uIENvbXBvbmVudFZhbHVlKE9icyBGSElSLk9ic2VydmF0aW9uLCBjb2RlIFN5c3RlbS5Db2RlKToKICBGaXJzdChPYnMuY29tcG9uZW50IGMKICAgIHdoZXJlIGMuY29kZSB+IFRvQ29uY2VwdChjb2RlKSkudmFsdWUgYXMgRkhJUi5RdWFudGl0eQoKLy8gVXNlIHRoZSBmb2xsb3dpbmcgaWYgU3lzdG9saWMgYW5kIERpYXN0b2xpYyBhcmUgY29tYmluZWQgYXMgY29tcG9uZW50cyB3aXRoaW4gb25lIE9ic2VydmF0aW9uLgpkZWZpbmUgIkJsb29kIFByZXNzdXJlIE9ic2VydmF0aW9uIENvbXBvbmVudHMiOgogIChDM0YuT2JzZXJ2YXRpb25Mb29rQmFjayhDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iQmxvb2QgcHJlc3N1cmUiXSksIFZpdGFsU2lnbnNMb29rYmFja1BlcmlvZCkpIGJwCiAgICBsZXQgU3lzdG9saWNWYWx1ZTogUm91bmQoQ29tcG9uZW50VmFsdWUoYnAsIENDLiJTeXN0b2xpYyBibG9vZCBwcmVzc3VyZSIpLnZhbHVlKSwKICAgICAgICBEaWFzdG9saWNWYWx1ZTogUm91bmQoQ29tcG9uZW50VmFsdWUoYnAsIENDLiJEaWFzdG9saWMgYmxvb2QgcHJlc3N1cmUiKS52YWx1ZSkKICAgcmV0dXJuIHsKICAgICAiRGF0ZSI6IFRvU3RyaW5nKEMzRi5GaW5kRGF0ZShicCkpLAogICAgICJTeXN0b2xpYyI6IFN5c3RvbGljVmFsdWUsCiAgICAgIkRpYXN0b2xpYyI6IERpYXN0b2xpY1ZhbHVlLAogICAgICJEaXNwbGF5IjogQ29hbGVzY2UoVG9TdHJpbmcoU3lzdG9saWNWYWx1ZSksICctJykgKyAnLycgKyBDb2FsZXNjZShUb1N0cmluZyhEaWFzdG9saWNWYWx1ZSksICctJykKICAgfQogICBzb3J0IGJ5IERhdGUgYXNjCgpkZWZpbmUgIkxhc3QgTzIgU2F0dXJhdGlvbiB2YWx1ZSI6CiAgQ29hbGVzY2UoQ2xpbmljYWxBc3Nlc3NtZW50cy5PMlNhdHVyYXRpb24sCiAgICBDM0YuUXVhbnRpdHlWYWx1ZShDM0YuTW9zdFJlY2VudCgiTzIgU2F0dXJhdGlvbiBPYnNlcnZhdGlvbnMiKSkudmFsdWUpCgpkZWZpbmUgIkxhc3QgTzIgU2F0dXJhdGlvbiBwZXJjZW50IjoKICAvLyBPMiBTYXR1cmF0aW9uIHNob3VsZCBiZSByZXBvcnRlZCBhcyBhIHBlcmNlbnQsIGUuZy4gOTIuCiAgaWYgIkxhc3QgTzIgU2F0dXJhdGlvbiB2YWx1ZSIgPj0gMSB0aGVuICJMYXN0IE8yIFNhdHVyYXRpb24gdmFsdWUiCiAgLy8gSWYgcmVwb3J0ZWQgYXMgZGVjaW1hbCAuOTIsIHRoZW4gbXVsdGlwbHkgYnkgMTAwLgogIGVsc2UgaWYgIkxhc3QgTzIgU2F0dXJhdGlvbiB2YWx1ZSIgaXMgbm90IG51bGwgdGhlbiBSb3VuZCgxMDAuMCAqICJMYXN0IE8yIFNhdHVyYXRpb24gdmFsdWUiKQogIGVsc2UgbnVsbAoKZGVmaW5lICJPMiBTYXR1cmF0aW9uIE9ic2VydmF0aW9ucyI6CiAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iT3h5Z2VuIHNhdHVyYXRpb24iXSksCiAgICBWaXRhbFNpZ25zTG9va2JhY2tQZXJpb2QpCgpkZWZpbmUgIkxhc3QgUmVzcGlyYXRvcnkgUmF0ZSI6CiAgQzNGLk1vc3RSZWNlbnQoIlJlc3BpcmF0b3J5IFJhdGUgT2JzZXJ2YXRpb25zIikKCmRlZmluZSAiTGFzdCBSZXNwaXJhdG9yeSBSYXRlIHZhbHVlIjoKICBDb2FsZXNjZShDbGluaWNhbEFzc2Vzc21lbnRzLlJlc3BpcmF0b3J5UmF0ZSwKICAgIEMzRi5RdWFudGl0eVZhbHVlKCJMYXN0IFJlc3BpcmF0b3J5IFJhdGUiKS52YWx1ZSkKCmRlZmluZSAiUmVzcGlyYXRvcnkgUmF0ZSBPYnNlcnZhdGlvbnMiOgogIEMzRi5PYnNlcnZhdGlvbkxvb2tCYWNrKAogICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIlJlc3BpcmF0b3J5IHJhdGUiXSksCiAgICBWaXRhbFNpZ25zTG9va2JhY2tQZXJpb2QpCgpkZWZpbmUgIkxhc3QgQm9keSBUZW1wZXJhdHVyZSI6CiAgQzNGLk1vc3RSZWNlbnQoIkJvZHkgVGVtcGVyYXR1cmUgT2JzZXJ2YXRpb25zIikKCmRlZmluZSAiTGFzdCBCb2R5IFRlbXBlcmF0dXJlIHZhbHVlIGluIEMiOgogIGlmIENsaW5pY2FsQXNzZXNzbWVudHMuVGVtcGVyYXR1cmVGIGlzIG51bGwgdGhlbgogICAgVGVtcGVyYXR1cmVJbkMoIkxhc3QgQm9keSBUZW1wZXJhdHVyZSIudmFsdWUpLnZhbHVlCiAgZWxzZQogICAgVGVtcGVyYXR1cmVJbkMoIFN5c3RlbS5RdWFudGl0eSB7dmFsdWU6IENsaW5pY2FsQXNzZXNzbWVudHMuVGVtcGVyYXR1cmVGLCB1bml0OiAnW2RlZ0ZdJ30gKS52YWx1ZQoKZGVmaW5lICJMYXN0IEJvZHkgVGVtcGVyYXR1cmUgdmFsdWUgaW4gRiI6CiAgQ29hbGVzY2UoQ2xpbmljYWxBc3Nlc3NtZW50cy5UZW1wZXJhdHVyZUYsCiAgICBUZW1wZXJhdHVyZUluRigiTGFzdCBCb2R5IFRlbXBlcmF0dXJlIi52YWx1ZSkudmFsdWUpCgpkZWZpbmUgIkJvZHkgVGVtcGVyYXR1cmUgT2JzZXJ2YXRpb25zIjoKICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJCb2R5IHRlbXBlcmF0dXJlIl0pLAogICAgVml0YWxTaWduc0xvb2tiYWNrUGVyaW9kKQoKZGVmaW5lICJMYXN0IEJvZHkgV2VpZ2h0IHZhbHVlIjoKICBUb01ldHJpYyhDM0YuUXVhbnRpdHlWYWx1ZShDM0YuTW9zdFJlY2VudCgKICAgIEMzRi5PYnNlcnZhdGlvbkxvb2tCYWNrKAogICAgICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iQm9keSB3ZWlnaHQiXSksCiAgICAgIFZpdGFsU2lnbnNMb29rYmFja1BlcmlvZCkKICApKSkudmFsdWUKCmRlZmluZSAiTGFzdCBCb2R5IEhlaWdodCB2YWx1ZSI6CiAgVG9NZXRyaWMoQzNGLlF1YW50aXR5VmFsdWUoQzNGLk1vc3RSZWNlbnQoCiAgICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIkJvZHkgaGVpZ2h0Il0pLAogICAgICBWaXRhbFNpZ25zTG9va2JhY2tQZXJpb2QpCiAgKSkpLnZhbHVlCgpkZWZpbmUgIkxhc3QgQk1JIjoKICBjYXNlCiAgICB3aGVuICJMYXN0IEJvZHkgV2VpZ2h0IHZhbHVlIiBpcyBudWxsIHRoZW4gbnVsbAogICAgd2hlbiAiTGFzdCBCb2R5IEhlaWdodCB2YWx1ZSIgaXMgbnVsbCB0aGVuIG51bGwKICAgIGVsc2UgU3lzdGVtLlF1YW50aXR5IHsgdmFsdWU6IFJvdW5kKCJMYXN0IEJvZHkgV2VpZ2h0IHZhbHVlIiAvICgiTGFzdCBCb2R5IEhlaWdodCB2YWx1ZSIgLyAxMDApIF4gMiksIHVuaXQ6ICdrZy9tMicgfQogIGVuZAoKZGVmaW5lIGZ1bmN0aW9uIFRvUXVhbnRpdHkocXVhbnRpdHkgRkhJUi5RdWFudGl0eSk6CglTeXN0ZW0uUXVhbnRpdHkgewogICAgCXZhbHVlOiBxdWFudGl0eS52YWx1ZS52YWx1ZSwKICAgICAgCXVuaXQ6IHF1YW50aXR5LmNvZGUudmFsdWUgIC8vIHVzZSBVQ1VNICdjb2RlJyBpbnN0ZWFkIG9mIFF1YW50aXR5ICd1bml0JwogICAgfQoKZGVmaW5lIGZ1bmN0aW9uIFRlbXBlcmF0dXJlSW5DKHF0eSBTeXN0ZW0uUXVhbnRpdHkpOgogIGNhc2UKICAgIHdoZW4gcXR5LnVuaXQgPSAnQ2VsJyB0aGVuIHF0eQogIAl3aGVuIHF0eS51bml0ID0gJ1tkZWdGXScgdGhlbgogIAkJU3lzdGVtLlF1YW50aXR5IHsgdmFsdWU6IFJvdW5kKChxdHkudmFsdWUgLSAzMikgKiAoNSAvIDkpLCAxKSwgdW5pdDogJ0NlbCcgfQogIAllbHNlIG51bGwKICBlbmQKCmRlZmluZSBmdW5jdGlvbiBUZW1wZXJhdHVyZUluRihxdHkgU3lzdGVtLlF1YW50aXR5KToKICBjYXNlCiAgICB3aGVuIHF0eS51bml0ID0gJ1tkZWdGXScgdGhlbiBxdHkKICAgIHdoZW4gcXR5LnVuaXQgPSAnQ2VsJyB0aGVuCiAgICAgIFN5c3RlbS5RdWFudGl0eSB7IHZhbHVlOiBSb3VuZCgocXR5LnZhbHVlICogKDkvNSkpICsgMzIsIDEpLCB1bml0OiAnW2RlZ0ZdJyB9CiAgICBlbHNlIG51bGwKICBlbmQKCmRlZmluZSBmdW5jdGlvbiBUb01ldHJpYyhxdHkgU3lzdGVtLlF1YW50aXR5KToKICBjYXNlCiAgd2hlbiBxdHkgaXMgbnVsbCB0aGVuIG51bGwKICB3aGVuIHF0eS52YWx1ZSBpcyBudWxsIHRoZW4gbnVsbAogIHdoZW4gcXR5LnVuaXQgPSAnW2xiX2F2XScgdGhlbgogICAgU3lzdGVtLlF1YW50aXR5IHsgdmFsdWU6IHF0eS52YWx1ZSAqIDAuNDU0LCB1bml0OiAna2cnIH0KICB3aGVuIHF0eS51bml0ID0gJ2cnIHRoZW4KICAgIFN5c3RlbS5RdWFudGl0eSB7IHZhbHVlOiBxdHkudmFsdWUgLyAxMDAwLCB1bml0OiAna2cnIH0KICB3aGVuIHF0eS51bml0ID0gJ1tpbl9pXScgdGhlbgogICAgU3lzdGVtLlF1YW50aXR5IHsgdmFsdWU6IHF0eS52YWx1ZSAqIDIuNTQsIHVuaXQ6ICdjbScgfQogIHdoZW4gcXR5LnVuaXQgPSAnW2RlZ0ZdJyB0aGVuCiAgICBTeXN0ZW0uUXVhbnRpdHkgeyB2YWx1ZTogKHF0eS52YWx1ZSAtIDMyKSAqICg1IC8gOSksIHVuaXQ6ICdDZWwnIH0KICBlbHNlCiAgICBxdHkKICBlbmQKCi8qCiAqIENsaW5pY2FsIEFzc2Vzc21lbnRzCiAqLwoKLy8gVE9ETzogRW5jaGFuY2VtZW50IC0gW09ic2VydmF0aW9uOiAiR2xhc2dvdyBDb21hIFNjYWxlIl0gc2NvcmUgdG90YWwgPiAxNSA9IENvbmZ1c2VkCmRlZmluZSAiTGFzdCBHbGFzZ293IENvbWEgU2NhbGUgc2NvcmUiOgogIG51bGwKCi8vIENvZGUgZnJvbSB2YWx1ZSBzZXQgIkFsZXJ0bmVzcyBTY2FsZSBDb2RlcyIKZGVmaW5lICJBbGVydG5lc3MgQXNzZXNzbWVudCBDb2RlIjoKICBDbGluaWNhbEFzc2Vzc21lbnRzLkFsZXJ0bmVzcwoKLy8gQ29kZSBmcm9tICJXSE8gUGVyZm9ybWFuY2UgU3RhdHVzIENvZGVzIgpkZWZpbmUgIlBlcmZvcm1hbmNlIFN0YXR1cyBDb2RlIjoKICBDbGluaWNhbEFzc2Vzc21lbnRzLlBlcmZvcm1hbmNlU3RhdHVzCgovKgoqIERldGVybWluZSBTZXZlcml0eSBDbGFzc2lmaWNhdGlvbgoqLwoKZGVmaW5lICJTZXZlcml0eSBDbGFzc2lmaWNhdGlvbiI6CiAgaWYgIklzIENyaXRpY2FsIFNldmVyaXR5IiB0aGVuICdDUklUSUNBTCcKICBlbHNlIGlmICJJcyBTZXZlcmUgU2V2ZXJpdHkiIHRoZW4gJ1NFVkVSRScKICBlbHNlIGlmICJJcyBNb2RlcmF0ZSBTZXZlcml0eSIgdGhlbiAnTU9ERVJBVEUnCiAgZWxzZSBpZiAiSXMgTWlsZCBTZXZlcml0eSIgdGhlbiAnTUlMRCcKICBlbHNlIG51bGwKCmRlZmluZSAiSXMgQ3JpdGljYWwgU2V2ZXJpdHkiOgogIGlmIENsaW5pY2FsQXNzZXNzbWVudHMuUmVzcGlyYXRvcnlGYWlsdXJlCiAgICBvciBDbGluaWNhbEFzc2Vzc21lbnRzLlNlcHRpY1Nob2NrCiAgICBvciBDbGluaWNhbEFzc2Vzc21lbnRzLk11bHRpb3JnYW5EeXNmdW5jdGlvbgogICAgdGhlbiB0cnVlCiAgZWxzZSBmYWxzZQoKZGVmaW5lICJJcyBTZXZlcmUgU2V2ZXJpdHkiOgogIGlmIG5vdCAiSXMgQ3JpdGljYWwgU2V2ZXJpdHkiCiAgICBhbmQgKCJMYXN0IE8yIFNhdHVyYXRpb24gcGVyY2VudCIgPCA5NAogICAgICBvciAiTGFzdCBSZXNwaXJhdG9yeSBSYXRlIHZhbHVlIiA+IDMwCiAgICAgIG9yICJMYXN0IFBhTzJGaU8yIFJhdGlvIExhYiBSZXN1bHQgdmFsdWUiIDwgMzAwCiAgICAgIG9yIENsaW5pY2FsQXNzZXNzbWVudHMuTHVuZ0luZmlsdHJhdGVzID4gNTApCiAgICB0aGVuIHRydWUKICBlbHNlIGZhbHNlCgovLyBUT0RPIGV2aWRlbmNlIG9mIGxvd2VyIHJlc3BpcmF0b3J5IGRpc2Vhc2UKLy8gVE9ETyBvbiByb29tIGFpciAobm90IFN1cHBsZW1lbnRhbCBPeHlnZW4pCmRlZmluZSAiSXMgTW9kZXJhdGUgU2V2ZXJpdHkiOgogIGlmIG5vdCAiSXMgU2V2ZXJlIFNldmVyaXR5IiBhbmQgbm90ICJJcyBDcml0aWNhbCBTZXZlcml0eSIKICAgIGFuZCAoIkxhc3QgTzIgU2F0dXJhdGlvbiBwZXJjZW50IiA+PSA5NAogICAgICAgIG9yIFN5bXB0b21zLlNob3J0bmVzc09mQnJlYXRoCiAgICAgICAgb3IgQ2xpbmljYWxBc3Nlc3NtZW50cy5EeXNwbmVhCiAgICAgICAgb3IgQ2xpbmljYWxBc3Nlc3NtZW50cy5BYm5vcm1hbENoZXN0SW1hZ2luZwogICAgKQogICAgdGhlbiB0cnVlCiAgZWxzZSBmYWxzZQoKLy8gVE9ETyBtb3ZlZCAzIHBhcmFtZXRlcnMgdG8gTW9kZXJhdCBhcyAiZXZpZGVuY2Ugb2YgbG93ZXIgcmVzcGlyYXRvcnkgZGlzZWFzZSIKZGVmaW5lICJJcyBNaWxkIFNldmVyaXR5IjoKICBpZiBub3QgIklzIFNldmVyZSBTZXZlcml0eSIgYW5kIG5vdCAiSXMgQ3JpdGljYWwgU2V2ZXJpdHkiIGFuZCBub3QgIklzIE1vZGVyYXRlIFNldmVyaXR5IgogICAgYW5kIChTeW1wdG9tcy5GZXZlciBvciBTeW1wdG9tcy5Db3VnaCBvciBTeW1wdG9tcy5Tb3JlVGhyb2F0IG9yIFN5bXB0b21zLk1hbGFpc2UKICAgICAgICAgIG9yIFN5bXB0b21zLkhlYWRhY2hlIG9yIFN5bXB0b21zLk11c2NsZVBhaW4gb3IgU3ltcHRvbXMuTmF1c2VhIG9yIFN5bXB0b21zLkxvc3NPZlRhc3RlQW5kU21lbGwpCiAgICB0aGVuIHRydWUKICBlbHNlIGZhbHNlCgovKgoqIFJpc2sgUHJvZ25vc3RpY2F0aW9uCiovCgovLyBUT0RPIEFsZXJ0bmVzcywgSW5zcGlyZWRPeHlnZW4sIFBlcmZvcm1hbmNlU3RhdHVzCgpkZWZpbmUgIlRvdGFsIFJpc2sgU2NvcmUiOgogICJSZXNwaXJhdG9yeSBSYXRlIFJpc2sgU2NvcmUiICsgIk8yIFNhdHVyYXRpb24gUmlzayBTY29yZSIgKyAiSGVhcnQgUmF0ZSBSaXNrIFNjb3JlIiArICJTeXN0b2xpYyBCUCBSaXNrIFNjb3JlIgogICAgKyAiVGVtcGVyYXR1cmUgUmlzayBTY29yZSIgKyAiQWxlcnRuZXNzIFNjb3JlIiArICJJbnNwaXJlZCBPeHlnZW4gU2NvcmUiICsgIlNleCBSaXNrIFNjb3JlIgogICAgKyAiQWdlIFJpc2sgU2NvcmUiICsgIlBlcmZvcm1hbmNlIFN0YXR1cyBTY29yZSIKCmRlZmluZSAiUmlzayBQZXJjZW50IjoKICBjYXNlICJUb3RhbCBSaXNrIFNjb3JlIgogICAgd2hlbiBudWxsIHRoZW4gbnVsbAogICAgd2hlbiAwIHRoZW4gMQogICAgd2hlbiAxIHRoZW4gMQogICAgd2hlbiAyIHRoZW4gMgogICAgd2hlbiAzIHRoZW4gMgogICAgd2hlbiA0IHRoZW4gMwogICAgd2hlbiA1IHRoZW4gOQogICAgd2hlbiA2IHRoZW4gMTUKICAgIHdoZW4gNyB0aGVuIDE4CiAgICB3aGVuIDggdGhlbiAyMgogICAgd2hlbiA5IHRoZW4gMjYKICAgIHdoZW4gMTAgdGhlbiAyOQogICAgd2hlbiAxMSB0aGVuIDM0CiAgICB3aGVuIDEyIHRoZW4gMzgKICAgIHdoZW4gMTMgdGhlbiA0NgogICAgd2hlbiAxNCB0aGVuIDQ4CiAgICB3aGVuIDE1IHRoZW4gNTAKICAgIHdoZW4gMTYgdGhlbiA1NQogICAgZWxzZSA2NgogIGVuZAoKZGVmaW5lICJSZXNwaXJhdG9yeSBSYXRlIFJpc2sgU2NvcmUiOgogIGNhc2UKICAgIHdoZW4gIkxhc3QgUmVzcGlyYXRvcnkgUmF0ZSB2YWx1ZSIgYmV0d2VlbiAxMiBhbmQgMjAgdGhlbiAwCiAgICB3aGVuICJMYXN0IFJlc3BpcmF0b3J5IFJhdGUgdmFsdWUiIGJldHdlZW4gOSBhbmQgMTEgdGhlbiAxCiAgICB3aGVuICJMYXN0IFJlc3BpcmF0b3J5IFJhdGUgdmFsdWUiIGJldHdlZW4gMjEgYW5kIDI0IHRoZW4gMgogICAgd2hlbiAiTGFzdCBSZXNwaXJhdG9yeSBSYXRlIHZhbHVlIiA8IDkgdGhlbiAzCiAgICB3aGVuICJMYXN0IFJlc3BpcmF0b3J5IFJhdGUgdmFsdWUiID4gMjQgdGhlbiAzCiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiTzIgU2F0dXJhdGlvbiBSaXNrIFNjb3JlIjoKICBjYXNlCiAgICB3aGVuICJMYXN0IE8yIFNhdHVyYXRpb24gcGVyY2VudCIgPiA5NSB0aGVuIDAKICAgIHdoZW4gIkxhc3QgTzIgU2F0dXJhdGlvbiBwZXJjZW50IiBiZXR3ZWVuIDk0IGFuZCA5NSB0aGVuIDEKICAgIHdoZW4gIkxhc3QgTzIgU2F0dXJhdGlvbiBwZXJjZW50IiBiZXR3ZWVuIDkyIGFuZCA5MyB0aGVuIDIKICAgIHdoZW4gIkxhc3QgTzIgU2F0dXJhdGlvbiBwZXJjZW50IiA8IDkyIHRoZW4gMwogICAgZWxzZSAwCiAgZW5kCgpkZWZpbmUgIkhlYXJ0IFJhdGUgUmlzayBTY29yZSI6CiAgY2FzZQogICAgd2hlbiAiTGFzdCBIZWFydCBSYXRlIHZhbHVlIiBiZXR3ZWVuIDUxIGFuZCA5MCB0aGVuIDAKICAgIHdoZW4gIkxhc3QgSGVhcnQgUmF0ZSB2YWx1ZSIgYmV0d2VlbiA0MSBhbmQgNTAgdGhlbiAxCiAgICB3aGVuICJMYXN0IEhlYXJ0IFJhdGUgdmFsdWUiIGJldHdlZW4gOTEgYW5kIDExMCB0aGVuIDEKICAgIHdoZW4gIkxhc3QgSGVhcnQgUmF0ZSB2YWx1ZSIgYmV0d2VlbiAxMTEgYW5kIDEzMCB0aGVuIDIKICAgIHdoZW4gIkxhc3QgSGVhcnQgUmF0ZSB2YWx1ZSIgPCA0MSB0aGVuIDMKICAgIHdoZW4gIkxhc3QgSGVhcnQgUmF0ZSB2YWx1ZSIgPiAxMzAgdGhlbiAzCiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiU3lzdG9saWMgQlAgUmlzayBTY29yZSI6CiAgY2FzZQogICAgd2hlbiAiTGFzdCBTQlAgdmFsdWUiIGJldHdlZW4gMTExIGFuZCAyMTkgdGhlbiAwCiAgICB3aGVuICJMYXN0IFNCUCB2YWx1ZSIgYmV0d2VlbiAxMDEgYW5kIDExMCB0aGVuIDEKICAgIHdoZW4gIkxhc3QgU0JQIHZhbHVlIiBiZXR3ZWVuIDkxIGFuZCAxMDAgdGhlbiAyCiAgICB3aGVuICJMYXN0IFNCUCB2YWx1ZSIgPCA5MSB0aGVuIDMKICAgIHdoZW4gIkxhc3QgU0JQIHZhbHVlIiA+IDIxOSB0aGVuIDMKICAgIGVsc2UgMAogIGVuZAoKZGVmaW5lICJUZW1wZXJhdHVyZSBSaXNrIFNjb3JlIjoKICBjYXNlCiAgICB3aGVuICJMYXN0IEJvZHkgVGVtcGVyYXR1cmUgdmFsdWUgaW4gQyIgYmV0d2VlbiAzNi4xIGFuZCAzOC4wIHRoZW4gMAogICAgd2hlbiAiTGFzdCBCb2R5IFRlbXBlcmF0dXJlIHZhbHVlIGluIEMiIGJldHdlZW4gMzUuMSBhbmQgMzYuMCB0aGVuIDEKICAgIHdoZW4gIkxhc3QgQm9keSBUZW1wZXJhdHVyZSB2YWx1ZSBpbiBDIiBiZXR3ZWVuIDM4LjEgYW5kIDM5LjAgdGhlbiAxCiAgICB3aGVuICJMYXN0IEJvZHkgVGVtcGVyYXR1cmUgdmFsdWUgaW4gQyIgPiAzOS4wIHRoZW4gMgogICAgd2hlbiAiTGFzdCBCb2R5IFRlbXBlcmF0dXJlIHZhbHVlIGluIEMiIDwgMzUuMSB0aGVuIDMKICAgIGVsc2UgMAogIGVuZAoKZGVmaW5lICJTZXggUmlzayBTY29yZSI6CiAgY2FzZQogICAgd2hlbiAiUGF0aWVudCBCaXJ0aCBTZXgiID0gJ00nIHRoZW4gMQogICAgd2hlbiAiUGF0aWVudCBCaXJ0aCBTZXgiID0gJ0YnIHRoZW4gMAogICAgLy8gaWYgYmlydGggc2V4IGlzIFVOSyBvciBub3QgYXZhaWxhYmxlLCB0aGVuIHVzZSBBZG1pbmlzdHJhdGl2ZSBHZW5kZXIKICAgIHdoZW4gUGF0aWVudC5nZW5kZXIgPSAnbWFsZScgdGhlbiAxCiAgICB3aGVuIFBhdGllbnQuZ2VuZGVyID0gJ2ZlbWFsZScgdGhlbiAwCiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiQWdlIFJpc2sgU2NvcmUiOgogIGNhc2UKICAgIHdoZW4gQWdlSW5ZZWFycygpIGJldHdlZW4gMTYgYW5kIDQ5IHRoZW4gMAogICAgd2hlbiBBZ2VJblllYXJzKCkgYmV0d2VlbiA1MCBhbmQgNjUgdGhlbiAyCiAgICB3aGVuIEFnZUluWWVhcnMoKSBiZXR3ZWVuIDY2IGFuZCA4MCB0aGVuIDMKICAgIHdoZW4gQWdlSW5ZZWFycygpID4gODAgdGhlbiA0CiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiQWxlcnRuZXNzIFNjb3JlIjoKICBjYXNlICJBbGVydG5lc3MgQXNzZXNzbWVudCBDb2RlIgogICAgd2hlbiBDQy4iQ29uZnVzZWQiLmNvZGUgdGhlbiAzCiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiUGVyZm9ybWFuY2UgU3RhdHVzIFNjb3JlIjoKICBjYXNlICJQZXJmb3JtYW5jZSBTdGF0dXMgQ29kZSIKICAgIHdoZW4gQ0MuIlBlcmZvcm1hbmNlIFN0YXR1cyAwIi5jb2RlIHRoZW4gMAogICAgd2hlbiBDQy4iUGVyZm9ybWFuY2UgU3RhdHVzIDEiLmNvZGUgdGhlbiAxCiAgICB3aGVuIENDLiJQZXJmb3JtYW5jZSBTdGF0dXMgMiIuY29kZSB0aGVuIDIKICAgIHdoZW4gQ0MuIlBlcmZvcm1hbmNlIFN0YXR1cyAzIi5jb2RlIHRoZW4gMwogICAgd2hlbiBDQy4iUGVyZm9ybWFuY2UgU3RhdHVzIDQiLmNvZGUgdGhlbiA0CiAgICBlbHNlIDAKICBlbmQKCmRlZmluZSAiSW5zcGlyZWQgT3h5Z2VuIFNjb3JlIjoKICBpZiBDbGluaWNhbEFzc2Vzc21lbnRzLlN1cHBsZW1lbnRhbE94eWdlbiB0aGVuIDIKICBlbHNlIDAKCi8qCiAqIEFzc2VzcyBSaXNrIEZhY3RvcnMKICovCgpkZWZpbmUgIlJpc2sgRmFjdG9ycyBjb3VudCI6CiAgKGlmICJIYXMgQ2FuY2VyIFJpc2sgRmFjdG9yIiB0aGVuIDEgZWxzZSAwKQogICAgKyAoaWYgIkhhcyBDYXJkaW92YXNjdWxhciBEaXNlYXNlIFJpc2sgRmFjdG9yIiB0aGVuIDEgZWxzZSAwKQogICAgKyAoaWYgIkhhcyBDaHJvbmljIFJlc3BpcmF0b3J5IERpc2Vhc2UgUmlzayBGYWN0b3IiIHRoZW4gMSBlbHNlIDApCiAgICArIChpZiAiSGFzIERpYWJldGVzIFR5cGUgMiBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKICAgICsgKGlmICJIYXMgRG93bnMgU3luZHJvbWUgUmlzayBGYWN0b3IiIHRoZW4gMSBlbHNlIDApCiAgICArIChpZiAiSGFzIEh5cGVydGVuc2lvbiBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKICAgICsgKGlmICJIYXMgSW1tdW5vc3VwcHJlc3Npb24gUmlzayBGYWN0b3IiIHRoZW4gMSBlbHNlIDApCiAgICArIChpZiAiSGFzIE5ldXJvbG9naWMgRGlzZWFzZSBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKICAgICsgKGlmICJIYXMgT2JzdHJ1Y3RpdmUgU2xlZXAgQXBuZWEgUmlzayBGYWN0b3IiIHRoZW4gMSBlbHNlIDApCiAgICArIChpZiAiSGFzIE9iZXNpdHkgUmlzayBGYWN0b3IiIHRoZW4gMSBlbHNlIDApCiAgICArIChpZiAiSGFzIFByZWduYW5jeSBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKICAgICsgKGlmICJIYXMgUmVuYWwgRGlzZWFzZSBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKICAgICsgKGlmICJIYXMgU3Rlcm9pZCBVc2FnZSBSaXNrIEZhY3RvciIgdGhlbiAxIGVsc2UgMCkKCmRlZmluZSAiQWxsIEFjdGl2ZSBDb25kaXRpb25zIjoKICBDM0YuQ29uZmlybWVkKEMzRi5BY3RpdmVPclJlY3VycmluZyhbQ29uZGl0aW9uXSkpCgpkZWZpbmUgIkhhcyBDYW5jZXIgUmlzayBGYWN0b3IiOgogIENvYWxlc2NlKAogICAgUmlza0ZhY3RvcnMuQ2FuY2VyLAogICAgZXhpc3RzKCJBbGwgQWN0aXZlIENvbmRpdGlvbnMiIEMKICAgICAgd2hlcmUgQy5jb2RlIGluIENDLiJNYWxpZ25hbmN5IENvZGVzIikKICApCgpkZWZpbmUgIkhhcyBDYXJkaW92YXNjdWxhciBEaXNlYXNlIFJpc2sgRmFjdG9yIjoKICBDb2FsZXNjZSgKICAgIFJpc2tGYWN0b3JzLkNhcmRpb3Zhc2N1bGFyRGlzZWFzZSwKICAgIGV4aXN0cygiQWxsIEFjdGl2ZSBDb25kaXRpb25zIiBDCiAgICAgIHdoZXJlIEMuY29kZSBpbiBDQy4iQ2FyZGlvdmFzY3VsYXIgRGlzZWFzZSBDb2RlcyIpCiAgKQoKZGVmaW5lICJIYXMgQ2hyb25pYyBSZXNwaXJhdG9yeSBEaXNlYXNlIFJpc2sgRmFjdG9yIjoKICBDb2FsZXNjZSgKICAgIFJpc2tGYWN0b3JzLkNocm9uaWNSZXNwaXJhdG9yeURpc2Vhc2UsCiAgICBleGlzdHMoIkFsbCBBY3RpdmUgQ29uZGl0aW9ucyIgQwogICAgICB3aGVyZSBDLmNvZGUgaW4gQ0MuIkNocm9uaWMgUmVzcGlyYXRvcnkgRGlzZWFzZSBDb2RlcyIpCiAgKQoKZGVmaW5lICJIYXMgRGlhYmV0ZXMgVHlwZSAyIFJpc2sgRmFjdG9yIjoKICBDb2FsZXNjZSgKICAgIFJpc2tGYWN0b3JzLkRpYWJldGVzVHlwZTIsCiAgICBleGlzdHMoIkFsbCBBY3RpdmUgQ29uZGl0aW9ucyIgQwogICAgICB3aGVyZSBDLmNvZGUgaW4gQ0MuIkRpYWJldGVzIFR5cGUgMiBDb2RlcyIpCiAgKQoKZGVmaW5lICJIYXMgRG93bnMgU3luZHJvbWUgUmlzayBGYWN0b3IiOgogIENvYWxlc2NlKAogICAgUmlza0ZhY3RvcnMuRG93bnNTeW5kcm9tZSwKICAgIGV4aXN0cygiQWxsIEFjdGl2ZSBDb25kaXRpb25zIiBDCiAgICAgIHdoZXJlIEMuY29kZSBpbiBDQy4iRG93bnMgU3luZHJvbWUgQ29kZXMiKQogICkKCmRlZmluZSAiSGFzIEh5cGVydGVuc2lvbiBSaXNrIEZhY3RvciI6CiAgQ29hbGVzY2UoCiAgICBSaXNrRmFjdG9ycy5IeXBlcnRlbnNpb24sCiAgICBleGlzdHMoIkFsbCBBY3RpdmUgQ29uZGl0aW9ucyIgQwogICAgICB3aGVyZSBDLmNvZGUgaW4gQ0MuIkh5cGVydGVuc2lvbiBDb2RlcyIpCiAgKQoKZGVmaW5lICJIYXMgSW1tdW5vc3VwcHJlc3Npb24gUmlzayBGYWN0b3IiOgogIFJpc2tGYWN0b3JzLkltbXVub3N1cHByZXNzaW9uCgpkZWZpbmUgIkhhcyBOZXVyb2xvZ2ljIERpc2Vhc2UgUmlzayBGYWN0b3IiOgogIFJpc2tGYWN0b3JzLk5ldXJvbG9naWNEaXNlYXNlCgpkZWZpbmUgIkhhcyBPYnN0cnVjdGl2ZSBTbGVlcCBBcG5lYSBSaXNrIEZhY3RvciI6CiAgQ29hbGVzY2UoCiAgICBSaXNrRmFjdG9ycy5PYnN0cnVjdGl2ZVNsZWVwQXBuZWEsCiAgICBleGlzdHMoIkFsbCBBY3RpdmUgQ29uZGl0aW9ucyIgQwogICAgICB3aGVyZSBDLmNvZGUgaW4gQ0MuIk9ic3RydWN0aXZlIFNsZWVwIEFwbmVhIENvZGVzIikKICApCgpkZWZpbmUgIkhhcyBPYmVzaXR5IFJpc2sgRmFjdG9yIjoKICBDb2FsZXNjZSgKICAgIFJpc2tGYWN0b3JzLk9iZXNpdHksCiAgICAoZXhpc3RzKCJBbGwgQWN0aXZlIENvbmRpdGlvbnMiIEMKICAgICAgd2hlcmUgKEMuY29kZSBpbiBDQy4iT2Jlc2l0eSBTTk9NRUQgQ29kZXMiCiAgICAgICAgb3IgQy5jb2RlIGluIENDLiJPYmVzaXR5IElDRDEwQ00gQ29kZXMiKSkKICAgICBvciAiTGFzdCBCTUkiLnZhbHVlID49IDM1KQogICkKCmRlZmluZSAiSGFzIFByZWduYW5jeSBSaXNrIEZhY3RvciI6CiAgUmlza0ZhY3RvcnMuUHJlZ25hbmN5CgpkZWZpbmUgIkhhcyBSZW5hbCBEaXNlYXNlIFJpc2sgRmFjdG9yIjoKICBDb2FsZXNjZSgKICAgIFJpc2tGYWN0b3JzLlJlbmFsRGlzZWFzZSwKICAgIGV4aXN0cygiQWxsIEFjdGl2ZSBDb25kaXRpb25zIiBDCiAgICAgIHdoZXJlIEMuY29kZSBpbiBDQy4iUmVuYWwgRGlzZWFzZSBDb2RlcyIpCiAgKQoKZGVmaW5lICJIYXMgU3Rlcm9pZCBVc2FnZSBSaXNrIEZhY3RvciI6CiAgUmlza0ZhY3RvcnMuU3Rlcm9pZFVzYWdlCgovKgogKiBEaWFnbm9zdGljIFRlc3RpbmcKICovCgpkZWZpbmUgIkxhc3QgQUxUIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJBTFQgTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgQVNUIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJBU1QgTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgQ1JQIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJDUlAgTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgQ3JlYXRpbmluZSBMYWIgUmVzdWx0IjoKICBDM0YuTW9zdFJlY2VudCgKICAgIEMzRi5PYnNlcnZhdGlvbkxvb2tCYWNrKAogICAgICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iQ3JlYXRpbmluZSBMYWIgUmVzdWx0cyJdKSwKICAgICAgTGFiUmVzdWx0c0xvb2tiYWNrUGVyaW9kKQogICkKCmRlZmluZSAiTGFzdCBELWRpbWVyIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJELWRpbWVyIExhYiBSZXN1bHRzIl0pLAogICAgICBMYWJSZXN1bHRzTG9va2JhY2tQZXJpb2QpCiAgKQoKZGVmaW5lICJMYXN0IE5ldXRyb3BoaWxzIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJOZXV0cm9waGlscyBMYWIgUmVzdWx0cyJdKSwKICAgICAgTGFiUmVzdWx0c0xvb2tiYWNrUGVyaW9kKQogICkKCmRlZmluZSAiTGFzdCBMZXVrb2N5dGUgTGFiIFJlc3VsdCI6CiAgQzNGLk1vc3RSZWNlbnQoCiAgICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIkxldWtvY3l0ZSBMYWIgUmVzdWx0cyJdKSwKICAgICAgTGFiUmVzdWx0c0xvb2tiYWNrUGVyaW9kKQogICkKCmRlZmluZSAiTGFzdCBGZXJyaXRpbiBMYWIgUmVzdWx0IjoKICBDM0YuTW9zdFJlY2VudCgKICAgIEMzRi5PYnNlcnZhdGlvbkxvb2tCYWNrKAogICAgICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBDQy4iRmVycml0aW4gTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgTHltcGhvY3l0ZXMgTGFiIFJlc3VsdCI6CiAgQzNGLk1vc3RSZWNlbnQoCiAgICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIkx5bXBob2N5dGVzIExhYiBSZXN1bHRzIl0pLAogICAgICBMYWJSZXN1bHRzTG9va2JhY2tQZXJpb2QpCiAgKQoKZGVmaW5lICJMYXN0IFBhTzJGaU8yIFJhdGlvIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJQYU8yRmlPMiBSYXRpbyBMYWIgUmVzdWx0cyJdKSwKICAgICAgTGFiUmVzdWx0c0xvb2tiYWNrUGVyaW9kKQogICkKCmRlZmluZSAiTGFzdCBQYU8yRmlPMiBSYXRpbyBMYWIgUmVzdWx0IHZhbHVlIjoKICBDb2FsZXNjZShDbGluaWNhbEFzc2Vzc21lbnRzLlBhTzJGaU8yUmF0aW8sCiAgICAoIkxhc3QgUGFPMkZpTzIgUmF0aW8gTGFiIFJlc3VsdCIudmFsdWUgYXMgRkhJUi5RdWFudGl0eSkudmFsdWUKICApCgpkZWZpbmUgIkxhc3QgUGxhdGVsZXRzIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJQbGF0ZWxldHMgTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgTERIIExhYiBSZXN1bHQiOgogIEMzRi5Nb3N0UmVjZW50KAogICAgQzNGLk9ic2VydmF0aW9uTG9va0JhY2soCiAgICAgIEMzRi5WZXJpZmllZChbT2JzZXJ2YXRpb246IENDLiJMREggTGFiIFJlc3VsdHMiXSksCiAgICAgIExhYlJlc3VsdHNMb29rYmFja1BlcmlvZCkKICApCgpkZWZpbmUgIkxhc3QgVHJvcG9uaW4gTGFiIFJlc3VsdCI6CiAgQzNGLk1vc3RSZWNlbnQoCiAgICBDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygKICAgICAgQzNGLlZlcmlmaWVkKFtPYnNlcnZhdGlvbjogQ0MuIlRyb3BvbmluIExhYiBSZXN1bHRzIl0pLAogICAgICBMYWJSZXN1bHRzTG9va2JhY2tQZXJpb2QpCiAgKQo="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+json"/>
    <data value=""/>
  </content>
</Library>