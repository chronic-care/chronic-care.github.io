<?xml version="1.0" encoding="UTF-8"?>

<Library xmlns="http://hl7.org/fhir">
  <id value="ProstateCancerScreening"/>
  <meta>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-shareablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-computablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-publishablelibrary"/>
    <profile value="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-executablelibrary"/>
  </meta>
  <text>
    <status value="generated"/><div xmlns="http://www.w3.org/1999/xhtml"><h2>Related Artifacts</h2><table class="grid"><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1</code></td></tr><tr><td>depends-on</td><td><code>http://hl7.org/fhir/Library/FHIRHelpers|4.0.1</code></td></tr><tr><td>depends-on</td><td><a href="Library-CDSConnectCommons.html">CQL Library - Common Logic for CDS (version 1.0.0)</a></td></tr><tr><td>depends-on</td><td><a href="Library-PreventiveCareConcepts.html">CQL Library - Preventive Care Shared Concepts and Terminology (version 1.0.0)</a></td></tr><tr><td>depends-on</td><td><a href="Library-PreventiveCareData.html">CQL Library - Preventive Care Shared Data Logic (version 1.0.0)</a></td></tr></table><h2>Parameters</h2><table class="grid"><tr><td>Patient</td><td>out</td><td>0</td><td>1</td><td>Patient</td></tr><tr><td>Prostate cancer conditions</td><td>out</td><td>0</td><td>*</td><td>Condition</td></tr><tr><td>Has prostate cancer Hx</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has family history of prostate cancer</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>PSA Observations</td><td>out</td><td>0</td><td>*</td><td>Observation</td></tr><tr><td>Last PSA</td><td>out</td><td>0</td><td>1</td><td>Observation</td></tr><tr><td>Last PSA value</td><td>out</td><td>0</td><td>1</td><td>decimal</td></tr><tr><td>Last PSA date</td><td>out</td><td>0</td><td>1</td><td>dateTime</td></tr><tr><td>Has PSA test</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>No PSA test results</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has PSA within one year</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has PSA within two years</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Has high PSA value</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Last PSA value is high</td><td>out</td><td>0</td><td>1</td><td>boolean</td></tr><tr><td>Next Step 1</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Next Step 4</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>PC Status</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>MI PSA Date 1</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>PSA value 1</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>PSA risk statement 1</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>PSA risk statement 2</td><td>out</td><td>0</td><td>1</td><td>string</td></tr><tr><td>Need PSA statement</td><td>out</td><td>0</td><td>1</td><td>string</td></tr></table><h2>Contents</h2><p><code>text/cql</code></p><pre><code class="language-sql">// # Introduction

// The Preventive Care logic library supports decision-making on preventive care screening for Prostate Cancer.

library ProstateCancerScreening version '1.0.0'

// # Data model #

using FHIR version '4.0.1'

// # Referenced libraries #

// The FHIRHelpers library provides common functions for simplifying interaction w/ the FHIR R4 data model.
include FHIRHelpers version '4.0.1' called FHIRHelpers
// The CDS Connect Commons library provides functions representing commonly used CDS logic and patterns.
include CDSConnectCommons version '1.0.0' called C3F
// The PreventiveCareConcepts library provides terminology concepts used to identify data elements throughout the artifact.
include PreventiveCareConcepts version '1.0.0' called PCC
// The PreventiveCareData library provides common data retrieval logic for preventive care guidelines.
include PreventiveCareData version '1.0.0' called Data

// # CDS logic #

context Patient

/* Prostate cancer screening logic */

define "Has prostate cancer Hx":
  exists( "Prostate cancer conditions" )

define "Prostate cancer conditions":
  Data."All active conditions" C
    where C.code ~ PCC."Prostate cancer"

define "Has family history of prostate cancer":
  /* exists([FamilyMemberHistory.condition.code: PCC."Prostate cancer"]) */
  exists([Condition: PCC."Family history of prostate cancer"])

define "PSA Observations":
  C3F.Verified([Observation: PCC."Prostate Specific Antigen Test"])

define "Last PSA":
  C3F.MostRecent("PSA Observations")

define "Last PSA value":
  C3F.QuantityValue("Last PSA").value

define "Last PSA date":
  C3F.FindDate("Last PSA")

define "Has PSA test":
  exists("PSA Observations")

define "No PSA test results":
  not exists("PSA Observations")

define "Has PSA within one year":
  exists(C3F.ObservationLookBack("PSA Observations", 1 year))

define "Has PSA within two years":
  exists(C3F.ObservationLookBack("PSA Observations", 2 year))

define "Has high PSA value":
  exists("PSA Observations" C
    where C3F.QuantityValue(C).value &gt; 4.0)

define "Last PSA value is high":
  "Last PSA value" &gt; 4.0

/*
 * Patient messages containing embedded content from the above clinical data.
 */

// # Next Steps #

define "Next Step 1":
  'Talk with ' + Data."Patient PCP name" + ' about whether you need another PSA test now.'

define "Next Step 4":
  'Learn about PSA testing and think about whether you want another test after ' + ToString("Last PSA date" + 2 years)

// # Text Variables #

define "PC Status":
  if "Has prostate cancer Hx"
    then Data."Patient PCP name" + ' says that you have a history of prostate cancer'
  else if "Has high PSA value"
    then 'you said that you have a history of high PSA value (PSA value higher than 4.0)'
  else
    null

define "MI PSA Date 1":
  if "Has PSA within one year"
    then Data."Patient PCP name" + '\'s record states that you last had a PSA test on ' + ToString("Last PSA date") + '.  You may be up-to-date with your PSA test.'
  else if "Has PSA test"
    then Data."Patient PCP name" + '\'s record states that you last had a PSA test on ' + ToString("Last PSA date") + '.  You may be due for another PSA test.'
  else Data."Patient PCP name" + ' does not have a record of when your last PSA was.'

define "PSA value 1":
  'Your last PSA value was ' + ToString("Last PSA value") + '. Generally, a PSA below 4 is considered good. Higher values may be, OK if they are not increasing over time.'

// # PSA risk statements #

// TODO handle unknown FH. Research negation of conditions and unknown.
define "PSA risk statement 1":
  if Data."Race is African American" and "Has family history of prostate cancer"
    then 'You are African American and have a family history of prostate cancer.  This places you at higher risk for prostate cancer.'
  else if not Data."Race is African American" and "Has family history of prostate cancer"
    then 'You have a family history of prostate cancer.  This places you at higher risk for prostate cancer.'
  else if Data."Race is African American" and not "Has family history of prostate cancer"
    then 'You are African American.  This places you at higher risk for prostate cancer.'
  else if Data."Race is African American"
    then 'You are African American.  This places you at higher risk for prostate cancer.  You said you are unsure if you have a family history of prostate cancer.  If you do, this also places you at higher risk for prostate cancer.'
  else
    'You said you are unsure if you have a family history of prostate cancer.  If you do, this places you at higher risk for prostate cancer.'

// TODO handle unknown FH. Research negation of conditions and unknown.
define "PSA risk statement 2":
  if Data."Race is African American" and "Has family history of prostate cancer"
    then 'are African American and have a family history of prostate cancer'
  else if not Data."Race is African American" and "Has family history of prostate cancer"
    then 'have a family history of prostate cancer'
  else if Data."Race is African American" and not "Has family history of prostate cancer"
    then 'are African American'
  else if Data."Race is African American"
    then 'are African American and may have a family history of prostate cancer'
  else
    'may have a family history of prostate cancer'

// # Patient text blocks #

define "Need PSA statement":
  Data."Patient PCP name" + '\'s record says you last had a PSA test on ' + ToString("Last PSA date")
</code></pre><p><code>Content not shown - (</code><code>application/elm+xml</code>, size = 21Kb)</p><p><code>Content not shown - (</code><code>application/elm+json</code>, size = 36Kb)</p></div>
  </text>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="shareable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="computable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="publishable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeCapability">
    <valueCode value="executable"/>
  </extension>
  <extension url="http://hl7.org/fhir/uv/cpg/StructureDefinition/cpg-knowledgeRepresentationLevel">
    <valueCode value="structured"/>
  </extension>
  <url value="http://fhir.org/guides/preventive-care/Library/ProstateCancerScreening"/>
  <version value="1.0.0"/>
  <name value="ProstateCancerScreening"/>
  <title value="CQL Library - CDS Logic for Prostate Cancer Screening and Personalized Care Plans"/>
  <status value="active"/>
  <experimental value="true"/>
  <type>
    <coding>
      <system value="http://terminology.hl7.org/CodeSystem/library-type"/>
      <code value="logic-library"/>
    </coding>
  </type>
  <date value="2021-03-08T22:54:39+00:00"/>
  <publisher value="U.S. Preventive Services Task Force (USPSTF)"/>
  <contact>
    <telecom>
      <system value="url"/>
      <value value="https://www.uspreventiveservicestaskforce.org/uspstf/"/>
    </telecom>
  </contact>
  <description value="This library contains logic to support prostate cancer screening and personalized, patient-centered care plans."/>
  <useContext>
    <code>
      <system value="http://terminology.hl7.org/CodeSystem/usage-context-type"/>
      <code value="focus"/>
      <display value="Clinical Focus"/>
    </code>
    <valueCodeableConcept>
      <coding>
        <system value="http://snomed.info/sct"/>
        <code value="254900004"/>
        <display value="Carcinoma of prostate (disorder)"/>
      </coding>
    </valueCodeableConcept>
  </useContext>
  <jurisdiction>
    <coding>
      <system value="http://unstats.un.org/unsd/methods/m49/m49.htm"/>
      <code value="001"/>
    </coding>
  </jurisdiction>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIR-ModelInfo|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://hl7.org/fhir/Library/FHIRHelpers|4.0.1"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://fhir.org/guides/preventive-care/Library/CDSConnectCommons|1.0.0"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://fhir.org/guides/preventive-care/Library/PreventiveCareConcepts|1.0.0"/>
  </relatedArtifact>
  <relatedArtifact>
    <type value="depends-on"/>
    <resource value="http://fhir.org/guides/preventive-care/Library/PreventiveCareData|1.0.0"/>
  </relatedArtifact>
  <parameter>
    <name value="Patient"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Patient"/>
  </parameter>
  <parameter>
    <name value="Prostate cancer conditions"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Condition"/>
  </parameter>
  <parameter>
    <name value="Has prostate cancer Hx"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has family history of prostate cancer"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="PSA Observations"/>
    <use value="out"/>
    <min value="0"/>
    <max value="*"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last PSA"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="Observation"/>
  </parameter>
  <parameter>
    <name value="Last PSA value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="decimal"/>
  </parameter>
  <parameter>
    <name value="Last PSA date"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="dateTime"/>
  </parameter>
  <parameter>
    <name value="Has PSA test"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="No PSA test results"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has PSA within one year"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has PSA within two years"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Has high PSA value"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Last PSA value is high"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="boolean"/>
  </parameter>
  <parameter>
    <name value="Next Step 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Next Step 4"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="PC Status"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="MI PSA Date 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="PSA value 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="PSA risk statement 1"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="PSA risk statement 2"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <parameter>
    <name value="Need PSA statement"/>
    <use value="out"/>
    <min value="0"/>
    <max value="1"/>
    <type value="string"/>
  </parameter>
  <content>
    <contentType value="text/cql"/>
    <data value="Ly8gIyBJbnRyb2R1Y3Rpb24KCi8vIFRoZSBQcmV2ZW50aXZlIENhcmUgbG9naWMgbGlicmFyeSBzdXBwb3J0cyBkZWNpc2lvbi1tYWtpbmcgb24gcHJldmVudGl2ZSBjYXJlIHNjcmVlbmluZyBmb3IgUHJvc3RhdGUgQ2FuY2VyLgoKbGlicmFyeSBQcm9zdGF0ZUNhbmNlclNjcmVlbmluZyB2ZXJzaW9uICcxLjAuMCcKCi8vICMgRGF0YSBtb2RlbCAjCgp1c2luZyBGSElSIHZlcnNpb24gJzQuMC4xJwoKLy8gIyBSZWZlcmVuY2VkIGxpYnJhcmllcyAjCgovLyBUaGUgRkhJUkhlbHBlcnMgbGlicmFyeSBwcm92aWRlcyBjb21tb24gZnVuY3Rpb25zIGZvciBzaW1wbGlmeWluZyBpbnRlcmFjdGlvbiB3LyB0aGUgRkhJUiBSNCBkYXRhIG1vZGVsLgppbmNsdWRlIEZISVJIZWxwZXJzIHZlcnNpb24gJzQuMC4xJyBjYWxsZWQgRkhJUkhlbHBlcnMKLy8gVGhlIENEUyBDb25uZWN0IENvbW1vbnMgbGlicmFyeSBwcm92aWRlcyBmdW5jdGlvbnMgcmVwcmVzZW50aW5nIGNvbW1vbmx5IHVzZWQgQ0RTIGxvZ2ljIGFuZCBwYXR0ZXJucy4KaW5jbHVkZSBDRFNDb25uZWN0Q29tbW9ucyB2ZXJzaW9uICcxLjAuMCcgY2FsbGVkIEMzRgovLyBUaGUgUHJldmVudGl2ZUNhcmVDb25jZXB0cyBsaWJyYXJ5IHByb3ZpZGVzIHRlcm1pbm9sb2d5IGNvbmNlcHRzIHVzZWQgdG8gaWRlbnRpZnkgZGF0YSBlbGVtZW50cyB0aHJvdWdob3V0IHRoZSBhcnRpZmFjdC4KaW5jbHVkZSBQcmV2ZW50aXZlQ2FyZUNvbmNlcHRzIHZlcnNpb24gJzEuMC4wJyBjYWxsZWQgUENDCi8vIFRoZSBQcmV2ZW50aXZlQ2FyZURhdGEgbGlicmFyeSBwcm92aWRlcyBjb21tb24gZGF0YSByZXRyaWV2YWwgbG9naWMgZm9yIHByZXZlbnRpdmUgY2FyZSBndWlkZWxpbmVzLgppbmNsdWRlIFByZXZlbnRpdmVDYXJlRGF0YSB2ZXJzaW9uICcxLjAuMCcgY2FsbGVkIERhdGEKCi8vICMgQ0RTIGxvZ2ljICMKCmNvbnRleHQgUGF0aWVudAoKLyogUHJvc3RhdGUgY2FuY2VyIHNjcmVlbmluZyBsb2dpYyAqLwoKZGVmaW5lICJIYXMgcHJvc3RhdGUgY2FuY2VyIEh4IjoKICBleGlzdHMoICJQcm9zdGF0ZSBjYW5jZXIgY29uZGl0aW9ucyIgKQoKZGVmaW5lICJQcm9zdGF0ZSBjYW5jZXIgY29uZGl0aW9ucyI6CiAgRGF0YS4iQWxsIGFjdGl2ZSBjb25kaXRpb25zIiBDCiAgICB3aGVyZSBDLmNvZGUgfiBQQ0MuIlByb3N0YXRlIGNhbmNlciIKCmRlZmluZSAiSGFzIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciI6CiAgLyogZXhpc3RzKFtGYW1pbHlNZW1iZXJIaXN0b3J5LmNvbmRpdGlvbi5jb2RlOiBQQ0MuIlByb3N0YXRlIGNhbmNlciJdKSAqLwogIGV4aXN0cyhbQ29uZGl0aW9uOiBQQ0MuIkZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciJdKQoKZGVmaW5lICJQU0EgT2JzZXJ2YXRpb25zIjoKICBDM0YuVmVyaWZpZWQoW09ic2VydmF0aW9uOiBQQ0MuIlByb3N0YXRlIFNwZWNpZmljIEFudGlnZW4gVGVzdCJdKQoKZGVmaW5lICJMYXN0IFBTQSI6CiAgQzNGLk1vc3RSZWNlbnQoIlBTQSBPYnNlcnZhdGlvbnMiKQoKZGVmaW5lICJMYXN0IFBTQSB2YWx1ZSI6CiAgQzNGLlF1YW50aXR5VmFsdWUoIkxhc3QgUFNBIikudmFsdWUKCmRlZmluZSAiTGFzdCBQU0EgZGF0ZSI6CiAgQzNGLkZpbmREYXRlKCJMYXN0IFBTQSIpCgpkZWZpbmUgIkhhcyBQU0EgdGVzdCI6CiAgZXhpc3RzKCJQU0EgT2JzZXJ2YXRpb25zIikKCmRlZmluZSAiTm8gUFNBIHRlc3QgcmVzdWx0cyI6CiAgbm90IGV4aXN0cygiUFNBIE9ic2VydmF0aW9ucyIpCgpkZWZpbmUgIkhhcyBQU0Egd2l0aGluIG9uZSB5ZWFyIjoKICBleGlzdHMoQzNGLk9ic2VydmF0aW9uTG9va0JhY2soIlBTQSBPYnNlcnZhdGlvbnMiLCAxIHllYXIpKQoKZGVmaW5lICJIYXMgUFNBIHdpdGhpbiB0d28geWVhcnMiOgogIGV4aXN0cyhDM0YuT2JzZXJ2YXRpb25Mb29rQmFjaygiUFNBIE9ic2VydmF0aW9ucyIsIDIgeWVhcikpCgpkZWZpbmUgIkhhcyBoaWdoIFBTQSB2YWx1ZSI6CiAgZXhpc3RzKCJQU0EgT2JzZXJ2YXRpb25zIiBDCiAgICB3aGVyZSBDM0YuUXVhbnRpdHlWYWx1ZShDKS52YWx1ZSA+IDQuMCkKCmRlZmluZSAiTGFzdCBQU0EgdmFsdWUgaXMgaGlnaCI6CiAgIkxhc3QgUFNBIHZhbHVlIiA+IDQuMAoKLyoKICogUGF0aWVudCBtZXNzYWdlcyBjb250YWluaW5nIGVtYmVkZGVkIGNvbnRlbnQgZnJvbSB0aGUgYWJvdmUgY2xpbmljYWwgZGF0YS4KICovCgovLyAjIE5leHQgU3RlcHMgIwoKZGVmaW5lICJOZXh0IFN0ZXAgMSI6CiAgJ1RhbGsgd2l0aCAnICsgRGF0YS4iUGF0aWVudCBQQ1AgbmFtZSIgKyAnIGFib3V0IHdoZXRoZXIgeW91IG5lZWQgYW5vdGhlciBQU0EgdGVzdCBub3cuJwoKZGVmaW5lICJOZXh0IFN0ZXAgNCI6CiAgJ0xlYXJuIGFib3V0IFBTQSB0ZXN0aW5nIGFuZCB0aGluayBhYm91dCB3aGV0aGVyIHlvdSB3YW50IGFub3RoZXIgdGVzdCBhZnRlciAnICsgVG9TdHJpbmcoIkxhc3QgUFNBIGRhdGUiICsgMiB5ZWFycykKCi8vICMgVGV4dCBWYXJpYWJsZXMgIwoKZGVmaW5lICJQQyBTdGF0dXMiOgogIGlmICJIYXMgcHJvc3RhdGUgY2FuY2VyIEh4IgogICAgdGhlbiBEYXRhLiJQYXRpZW50IFBDUCBuYW1lIiArICcgc2F5cyB0aGF0IHlvdSBoYXZlIGEgaGlzdG9yeSBvZiBwcm9zdGF0ZSBjYW5jZXInCiAgZWxzZSBpZiAiSGFzIGhpZ2ggUFNBIHZhbHVlIgogICAgdGhlbiAneW91IHNhaWQgdGhhdCB5b3UgaGF2ZSBhIGhpc3Rvcnkgb2YgaGlnaCBQU0EgdmFsdWUgKFBTQSB2YWx1ZSBoaWdoZXIgdGhhbiA0LjApJwogIGVsc2UKICAgIG51bGwKCmRlZmluZSAiTUkgUFNBIERhdGUgMSI6CiAgaWYgIkhhcyBQU0Egd2l0aGluIG9uZSB5ZWFyIgogICAgdGhlbiBEYXRhLiJQYXRpZW50IFBDUCBuYW1lIiArICdcJ3MgcmVjb3JkIHN0YXRlcyB0aGF0IHlvdSBsYXN0IGhhZCBhIFBTQSB0ZXN0IG9uICcgKyBUb1N0cmluZygiTGFzdCBQU0EgZGF0ZSIpICsgJy4gIFlvdSBtYXkgYmUgdXAtdG8tZGF0ZSB3aXRoIHlvdXIgUFNBIHRlc3QuJwogIGVsc2UgaWYgIkhhcyBQU0EgdGVzdCIKICAgIHRoZW4gRGF0YS4iUGF0aWVudCBQQ1AgbmFtZSIgKyAnXCdzIHJlY29yZCBzdGF0ZXMgdGhhdCB5b3UgbGFzdCBoYWQgYSBQU0EgdGVzdCBvbiAnICsgVG9TdHJpbmcoIkxhc3QgUFNBIGRhdGUiKSArICcuICBZb3UgbWF5IGJlIGR1ZSBmb3IgYW5vdGhlciBQU0EgdGVzdC4nCiAgZWxzZSBEYXRhLiJQYXRpZW50IFBDUCBuYW1lIiArICcgZG9lcyBub3QgaGF2ZSBhIHJlY29yZCBvZiB3aGVuIHlvdXIgbGFzdCBQU0Egd2FzLicKCmRlZmluZSAiUFNBIHZhbHVlIDEiOgogICdZb3VyIGxhc3QgUFNBIHZhbHVlIHdhcyAnICsgVG9TdHJpbmcoIkxhc3QgUFNBIHZhbHVlIikgKyAnLiBHZW5lcmFsbHksIGEgUFNBIGJlbG93IDQgaXMgY29uc2lkZXJlZCBnb29kLiBIaWdoZXIgdmFsdWVzIG1heSBiZSwgT0sgaWYgdGhleSBhcmUgbm90IGluY3JlYXNpbmcgb3ZlciB0aW1lLicKCi8vICMgUFNBIHJpc2sgc3RhdGVtZW50cyAjCgovLyBUT0RPIGhhbmRsZSB1bmtub3duIEZILiBSZXNlYXJjaCBuZWdhdGlvbiBvZiBjb25kaXRpb25zIGFuZCB1bmtub3duLgpkZWZpbmUgIlBTQSByaXNrIHN0YXRlbWVudCAxIjoKICBpZiBEYXRhLiJSYWNlIGlzIEFmcmljYW4gQW1lcmljYW4iIGFuZCAiSGFzIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciIKICAgIHRoZW4gJ1lvdSBhcmUgQWZyaWNhbiBBbWVyaWNhbiBhbmQgaGF2ZSBhIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlci4gIFRoaXMgcGxhY2VzIHlvdSBhdCBoaWdoZXIgcmlzayBmb3IgcHJvc3RhdGUgY2FuY2VyLicKICBlbHNlIGlmIG5vdCBEYXRhLiJSYWNlIGlzIEFmcmljYW4gQW1lcmljYW4iIGFuZCAiSGFzIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciIKICAgIHRoZW4gJ1lvdSBoYXZlIGEgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyLiAgVGhpcyBwbGFjZXMgeW91IGF0IGhpZ2hlciByaXNrIGZvciBwcm9zdGF0ZSBjYW5jZXIuJwogIGVsc2UgaWYgRGF0YS4iUmFjZSBpcyBBZnJpY2FuIEFtZXJpY2FuIiBhbmQgbm90ICJIYXMgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyIgogICAgdGhlbiAnWW91IGFyZSBBZnJpY2FuIEFtZXJpY2FuLiAgVGhpcyBwbGFjZXMgeW91IGF0IGhpZ2hlciByaXNrIGZvciBwcm9zdGF0ZSBjYW5jZXIuJwogIGVsc2UgaWYgRGF0YS4iUmFjZSBpcyBBZnJpY2FuIEFtZXJpY2FuIgogICAgdGhlbiAnWW91IGFyZSBBZnJpY2FuIEFtZXJpY2FuLiAgVGhpcyBwbGFjZXMgeW91IGF0IGhpZ2hlciByaXNrIGZvciBwcm9zdGF0ZSBjYW5jZXIuICBZb3Ugc2FpZCB5b3UgYXJlIHVuc3VyZSBpZiB5b3UgaGF2ZSBhIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlci4gIElmIHlvdSBkbywgdGhpcyBhbHNvIHBsYWNlcyB5b3UgYXQgaGlnaGVyIHJpc2sgZm9yIHByb3N0YXRlIGNhbmNlci4nCiAgZWxzZQogICAgJ1lvdSBzYWlkIHlvdSBhcmUgdW5zdXJlIGlmIHlvdSBoYXZlIGEgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyLiAgSWYgeW91IGRvLCB0aGlzIHBsYWNlcyB5b3UgYXQgaGlnaGVyIHJpc2sgZm9yIHByb3N0YXRlIGNhbmNlci4nCgovLyBUT0RPIGhhbmRsZSB1bmtub3duIEZILiBSZXNlYXJjaCBuZWdhdGlvbiBvZiBjb25kaXRpb25zIGFuZCB1bmtub3duLgpkZWZpbmUgIlBTQSByaXNrIHN0YXRlbWVudCAyIjoKICBpZiBEYXRhLiJSYWNlIGlzIEFmcmljYW4gQW1lcmljYW4iIGFuZCAiSGFzIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciIKICAgIHRoZW4gJ2FyZSBBZnJpY2FuIEFtZXJpY2FuIGFuZCBoYXZlIGEgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyJwogIGVsc2UgaWYgbm90IERhdGEuIlJhY2UgaXMgQWZyaWNhbiBBbWVyaWNhbiIgYW5kICJIYXMgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyIgogICAgdGhlbiAnaGF2ZSBhIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlcicKICBlbHNlIGlmIERhdGEuIlJhY2UgaXMgQWZyaWNhbiBBbWVyaWNhbiIgYW5kIG5vdCAiSGFzIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlciIKICAgIHRoZW4gJ2FyZSBBZnJpY2FuIEFtZXJpY2FuJwogIGVsc2UgaWYgRGF0YS4iUmFjZSBpcyBBZnJpY2FuIEFtZXJpY2FuIgogICAgdGhlbiAnYXJlIEFmcmljYW4gQW1lcmljYW4gYW5kIG1heSBoYXZlIGEgZmFtaWx5IGhpc3Rvcnkgb2YgcHJvc3RhdGUgY2FuY2VyJwogIGVsc2UKICAgICdtYXkgaGF2ZSBhIGZhbWlseSBoaXN0b3J5IG9mIHByb3N0YXRlIGNhbmNlcicKCi8vICMgUGF0aWVudCB0ZXh0IGJsb2NrcyAjCgpkZWZpbmUgIk5lZWQgUFNBIHN0YXRlbWVudCI6CiAgRGF0YS4iUGF0aWVudCBQQ1AgbmFtZSIgKyAnXCdzIHJlY29yZCBzYXlzIHlvdSBsYXN0IGhhZCBhIFBTQSB0ZXN0IG9uICcgKyBUb1N0cmluZygiTGFzdCBQU0EgZGF0ZSIpCg=="/>
  </content>
  <content>
    <contentType value="application/elm+xml"/>
    <data value=""/>
  </content>
  <content>
    <contentType value="application/elm+json"/>
    <data value=""/>
  </content>
</Library>